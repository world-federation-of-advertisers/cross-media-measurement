# Copyright 2023 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Configure Duchy"

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Image tag needed for configuration"
        type: string
        required: true
      duchy_name:
        description: "The name of the Duchy to build"
        required: true
      kubectl_apply:
        description: "Apply the manifest to the cluster"
        required: false
        type: boolean

env:
  REGISTRY: ghcr.io
  REPO_PREFIX: world-federation-of-advertisers/packages
jobs:
  create_k8s_manifest:
    runs-on: ubuntu-20.04
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v2

      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Setup Gcloud identity federation
      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.WFI_PROVIDER }}
          service_account: ${{ secrets.WFI_SA }}
          token_format: 'access_token'

      # Update KUBECONFIG
      - name: Update KUBECONFIG
        run: gcloud container clusters get-credentials dev-halo-duchy-worker --zone us-central1

      - name: Apply secrets
        run: |
          bazelisk build //src/main/k8s/testing/secretfiles:kustomization.tar
          mkdir secretfiles
          tar -xf "$(bazelisk info bazel-bin)/src/main/k8s/testing/secretfiles/kustomization.tar" -C secretfiles
          resource_name="$(kubectl apply -k secretfiles/src/main/k8s/testing/secretfiles/kustomization -o name)"
          echo "SECRET_NAME=$(basename $resource_name)" >> "$GITHUB_ENV"

      # TODO(wfa-siyengar): add duchy as an input at high-level(QA deploy)

      # Create k8s manifest
      - name: Build K8s manifest
        run: |
          bazelisk build //src/main/k8s/dev:${{ inputs.duchy_name }}_duchy_gke \
          --define k8s_duchy_secret_name=$SECRET_NAME \
          --define duchy_cert_id=SVVse4xWHL0 \
          --define duchy_storage_bucket=${{ inputs.duchy_name }}-duchy \
          --define container_registry=${{ env.REGISTRY }} \
          --define image_repo_prefix=${{ env.REPO_PREFIX }} \
          --define image_tag=${{ inputs.image_tag }}

      # Apply manifest
      - name: apply k8s manifest
        if: inputs.kubectl_apply == true
        run: kubectl apply -f bazel-bin/src/main/k8s/dev/${{ inputs.duchy_name }}.yaml
