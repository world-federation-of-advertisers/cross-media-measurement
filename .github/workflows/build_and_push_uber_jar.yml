# Copyright 2025 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and push uber jar to Github packages

on:
  push:
    branches:
      - marcopremier/deploy_cloudfunctions_using_terraform
  workflow_call:
    inputs:
      image-tag:
        description: "Tag of container images"
        type: string
        required: true

jobs:
  publish-artifacts:
    name: Publish Uber‑JAR to GitHub Packages
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4


      # 2) Set up Bazel & build the fat‑jar
      - name: Set up Bazel
        uses: world-federation-of-advertisers/actions/setup-bazel@v2

      - name: Set up Java & Maven
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build uber‑jar
        run: |
          bazel build //src/main/kotlin/org/wfanet/measurement/securecomputation/deploy/gcloud/datawatcher:DataWatcherFunction_deploy.jar

      # 3) Install Maven (it isn’t on ubuntu-22.04 by default)

      # 4) Write Maven settings.xml w/ GitHub Packages credentials
      - name: Configure Maven for GitHub Packages
        env:
          MAVEN_USERNAME: ${{ github.actor }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>\${env.MAVEN_USERNAME}</username>
                <password>\${env.MAVEN_PASSWORD}</password>
              </server>
            </servers>
          </settings>
          EOF

      # 5) Deploy the fat‑jar and auto‑generate its POM
      - name: Deploy fat‑jar to GitHub Packages
        env:
          MAVEN_REPO: https://maven.pkg.github.com/${{ github.repository }}
          MAVEN_USERNAME: ${{ github.actor }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACT_VERSION: "test"
        run: |
          # 1) Resolve and validate the JAR path:
          JAR_PATH="$(bazel info bazel-bin)/src/main/kotlin/org/wfanet/measurement/securecomputation/deploy/gcloud/datawatcher/DataWatcherFunction_deploy.jar"
          echo "-> JAR_PATH is: $JAR_PATH"
          if [ ! -f "$JAR_PATH" ]; then
            echo "❌ Jar not found at $JAR_PATH"; exit 1
          fi
          ls -lh "$JAR_PATH"
          
          # 2) Run with batch mode (-B) and full stacktrace (-e):
          mvn -B -e deploy:deploy-file \
            -Durl=${MAVEN_REPO} \
            -DrepositoryId=github \
            -Dfile="$JAR_PATH" \
            -DgroupId=org.wfanet.measurement.securecomputation.deploy.gcloud.datawatcher \
            -DartifactId=datawatcher \
            -Dversion=${ARTIFACT_VERSION} \
            -DgeneratePom=true \
            -Dpackaging=jar
#      - name: Deploy fat‑jar to GitHub Packages
#        env:
#          MAVEN_REPO: https://maven.pkg.github.com/${{ github.repository }}
##          ARTIFACT_VERSION: ${{ input.image-tag }}
#          ARTIFACT_VERSION: "test"
#        run: |
#          JAR_PATH="$(bazel info bazel-bin)/src/main/kotlin/org/wfanet/measurement/securecomputation/deploy/gcloud/datawatcher/DataWatcherFunction_deploy.jar"
#          mvn deploy:deploy-file \
#            -Durl=${MAVEN_REPO} \
#            -DrepositoryId=github \
#            -Dfile=${JAR_PATH} \
#            -DgroupId=org.wfanet.measurement.securecomputation.deploy.gcloud.datawatcher \
#            -DartifactId=datawatcher \
#            -Dversion=${ARTIFACT_VERSION} \
#            -DgeneratePom=true