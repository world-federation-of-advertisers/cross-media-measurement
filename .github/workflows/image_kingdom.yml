# Copyright 2023 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Terraform Kingdom'

on:
  push:
    branches: [ "main" ]
  pull_request:

env:
  GCP_CREDENTIALS: '${{ secrets.GCP_CREDENTIALS }}'

permissions:
  contents: read

jobs:
  terraform:
    name: 'Kingdom image build and push'
    runs-on: ubuntu-22.04
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # TODO(issues/888): Use workload Identity in place of Service account authentication.
      - name: 'Setting up GCP account Connection'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Setup the SDK
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      # Build the image
      - name: Build Bazel image
        run: |
          bazel query 'filter("push_kingdom", kind("container_push", //src/main/docker:all))' |
          xargs bazel build -c opt --define container_registry=gcr.io \
          --define image_repo_prefix=halo-cmm-sandbox --define image_tag=build-0001

      # Login to GCR
      - name: Login to GCR
        run: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io

      # Push the image
      - name: Push Bazel image
        run: |
          bazel query 'kind("container_push", "//src/main/docker:*")' --output=label |
          xargs -L 1 bazel run -c opt --define container_registry=gcr.io \
          --define image_repo_prefix=halo-cmm-sandbox  --platforms=//build/platforms:ubuntu_20_04_rbe --define image_tag=build-0001
