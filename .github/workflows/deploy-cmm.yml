# Copyright 2023 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Deploy CMM

on:
  push:
    branches: [ feature/cmm-orchestrator ]
  workflow_dispatch:
    inputs:
      terraform_version:
        description: 'The Terraform version to use'
        required: false
        default: '1.3.6'
        type: string
      environment:
        type: choice
        description: 'Environment to run the flow for.'
        default: qa
        options:
          - qa
          - nightly
      kubectl_apply:
        description: "Apply the manifest to the cluster"
        required: false
        type: boolean

env:
  REGISTRY: ghcr.io
  REPO_PREFIX: 'world-federation-of-advertisers/packages'
  ROOT_PATH: '${{ github.workspace }}/src/main/terraform/gcloud'
  PROJECT: 'halo-cmm'

# needed to inject $ACTIONS_ID_TOKEN_REQUEST_TOKEN
# which is inturn used to log into google cloud.
permissions:
  contents: 'read'
  id-token: 'write'
  packages: 'write'

jobs:
  create-image-tag:
    uses: ./.github/workflows/create-cmm-images.yml

  create-cmm-infra:
    uses: ./.github/workflows/create-cmm-infra.yml
    secrets: inherit
    with:
      environment: qa #${{ inputs.environment }}
      terraform_apply: false #${{ inputs.terraform_apply }}

  configure-kingdom:
    if: inputs.terraform_apply == true
    needs: [ create-cmm-infra, create-image-tag ]
    uses: ./.github/workflows/configure-kingdom.yml
    secrets: inherit
    with:
      image_tag: ${{ needs.create-image-tag.outputs.image_tag }}
      kubectl_apply: false #${{ inputs.kubectl_apply }}

  configure-duchy-1:
    if: inputs.terraform_apply == true
    needs: [ create-cmm-infra, create-image-tag ]
    uses: ./.github/workflows/configure-duchy.yml
    secrets: inherit
    with:
      duchy_name: worker1 #{{ inputs.duchy_name }}
      image_tag: ${{ needs.create-image-tag.outputs.image_tag }}
      kubectl_apply: false #${{ inputs.kubectl_apply }}

  configure-duchy-2:
    if: inputs.terraform_apply == true
    needs: [ create-cmm-infra, create-image-tag ]
    uses: ./.github/workflows/configure-duchy.yml
    secrets: inherit
    with:
      duchy_name: worker2 #{{ inputs.duchy_name }}
      image_tag: ${{ needs.create-image-tag.outputs.image_tag }}
      kubectl_apply: false #${{ inputs.kubectl_apply }}

  configure-aggregator:
    if: inputs.terraform_apply == true
    needs: [ create-cmm-infra, create-image-tag ]
    uses: ./.github/workflows/configure-duchy.yml
    secrets: inherit
    with:
      duchy_name: aggregator #{{ inputs.duchy_name }}
      image_tag: ${{ needs.create-image-tag.outputs.image_tag }}
      kubectl_apply: false #${{ inputs.kubectl_apply }}
