# Copyright 2023 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and push container images

on:
  workflow_call:
    inputs:
      image-tag:
        description: "Tag of container images"
        type: string
        required: true
jobs:
  push-images:
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    env:
      CONTAINER_REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/free-disk-space

      - name: Write auth.bazelrc
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
        run: |
          cat << EOF > auth.bazelrc
          build --remote_header=x-buildbuddy-api-key=$BUILDBUDDY_API_KEY
          EOF

      - name: Write ~/.bazelrc
        env:
          IMAGE_TAG: ${{ inputs.image-tag }}
          EDPA_TLS_CERT_FILE_PATH: "/etc/ssl/edpa_tee_app_tls.pem"
          EDPA_TLS_KEY_FILE_PATH: "/etc/ssl/edpa_tee_app_tls.key"
          SECURE_COMPUTATION_CERT_COLLECTION_FILE_PATH: "/etc/ssl/secure_computation_root.pem"
          KINGDOM_PUBLIC_API_TARGET: "v2alpha.kingdom.dev.halo-cmm.org:8443"
          SECURE_COMPUTATION_PUBLIC_API_TARGET: "v1alpha.secure-computation.dev.halo-cmm.org:8443"
          KINGDOM_CERT_COLLECTION_FILE_PATH: "etc/ssl/kingdom_root.pem"
          SUBSCRIPTION_ID: "subscription-here"
          GOOGLE_PUB_SUB_PROJECT_ID: "halo-cmm-dev"
          EVENT_TEMPLATE_METADATA_TYPE: "/var/tmp/event_proto_descriptors.pb"
        run: |
          cat << EOF > ~/.bazelrc
          common --config=ci
          build --define container_registry=$CONTAINER_REGISTRY
          build --define image_repo_prefix=$GITHUB_REPOSITORY_OWNER
          build --define image_tag=$IMAGE_TAG
          build --define=edpa_tls_cert_file_path=$EDPA_TLS_CERT_FILE_PATH
          build --define=edpa_tls_key_file_path=$EDPA_TLS_KEY_FILE_PATH
          build --define=secure_computation_cert_collection_file_path=$SECURE_COMPUTATION_CERT_COLLECTION_FILE_PATH
          build --define=kingdom_public_api_target=$KINGDOM_PUBLIC_API_TARGET
          build --define=secure_computation_public_api_target=$SECURE_COMPUTATION_PUBLIC_API_TARGET
          build --define=kingdom_cert_collection_file_path=$KINGDOM_CERT_COLLECTION_FILE_PATH
          build --define=subscription_id=$SUBSCRIPTION_ID
          build --define=google_pub_sub_project_id=$GOOGLE_PUB_SUB_PROJECT_ID
          build --define=event_template_metadata_type=$EVENT_TEMPLATE_METADATA_TYPE
          EOF

      - name: Authenticate to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build images
        run: >
          bazelisk build
          //src/main/docker:push_all_gke_images 
          //src/main/docker:push_tee_app_gke_images
          //src/main/docker/panel_exchange_client:push_all_images
          //src/main/docker:push_all_eks_images

      - name: Push images
        run: |
          bazelisk run //src/main/docker:push_all_gke_images 
          bazelisk run //src/main/docker:push_tee_app_gke_images
          bazelisk run //src/main/docker/panel_exchange_client:push_all_images
          bazelisk run //src/main/docker:push_all_eks_images
