# Copyright 2025 The Cross-Media Measurement Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Build and Deploy Cloud Function"
description: "Build Bazel uber-jar and deploy to Google Cloud Functions"
inputs:
  environment:
    description: "GitHub environment"
    required: true
  google_project:
    description: "Google project ID"
    required: true
  cloud_region:
    description: "Cloud region"
    required: true
  function_name:
    description: "GCF function name"
    required: true
  entry_point:
    description: "Java entry point"
    required: true
  bazel_target_label:
    description: "Bazel target label that must output an uber JAR"
    required: true
  trigger_bucket:
    description: "GCS bucket name"
    required: false
  run_service_account:
    description: "Service account to run the function"
    required: true
  trigger_service_account:
    description: "Service account to receive the trigger (storage-only)"
    required: false
  extra_env_vars:
    description: "Additional --set-env-vars"
    required: false
  uber_jar_temp_dir:
    description: "Temp directory to store the uber JAR"
    required: true

runs:
  using: "composite"
  steps:

    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ inputs.google_project }}

    - name: Build uber-jar
      shell: bash
      run: |
        bazel build ${{ inputs.bazel_target_label }}

    - name: Locate and copy uber-jar
      shell: bash
      run: |
        JAR=$(bazel cquery "${{ inputs.bazel_target_label }}" --output=files)

        mkdir -p "${{ inputs.uber_jar_temp_dir }}"
        cp "$JAR" "${{ inputs.uber_jar_temp_dir }}/"

    - name: Deploy function
      shell: bash
      run: |
        set -euo pipefail
        
        ARGS=(
          functions deploy "${{ inputs.function_name }}"
          --gen2
          --runtime=java17
          --entry-point="${{ inputs.entry_point }}"
          --memory=512MB
          --region="${{ inputs.cloud_region }}"
          --run-service-account="${{ inputs.run_service_account }}"
          --source="${{ inputs.uber_jar_temp_dir }}"
        )
        
        if [[ -n "${{ inputs.trigger_bucket }}" ]]; then
          ARGS+=(
            --trigger-event-filters="type=google.cloud.storage.object.v1.finalized"
            --trigger-event-filters="bucket=${{ inputs.trigger_bucket }}"
            --trigger-service-account="${{ inputs.trigger_service_account }}"
          )
        else
          ARGS+=(
            --trigger-http
            --allow-unauthenticated
          )
        fi
        
        if [[ -n "${{ inputs.extra_env_vars }}" ]]; then
          ARGS+=(--set-env-vars="${{ inputs.extra_env_vars }}")
        fi
        
        gcloud "${ARGS[@]}"