#!/usr/bin/env bash

set -eEu -o pipefail

readonly IMAGE="${IMAGE:-docker.io/wfameasurement/bazel@sha256:a1fee281b05fdaa769ff4e1d85cba831c046fbd7f177f31c06f3bf3840f4dec0}"
readonly DOCKER="${DOCKER:-docker}"
readonly USERNAME="$(id -un)"
readonly OUTPUT_USER_ROOT="${HOME}/.cache/bazel/_bazel_${USERNAME}"
readonly BAZELISK_HOME="${HOME}/.cache/bazelisk"

check_bash_version() {
  if [[ "${BASH_VERSINFO:-0}" -lt 5 ]]; then
    echo "Bash version ${BASH_VERSION:-unknown} is too old" >&2
    exit 1
  fi
}

is_podman() {
  [[ "$($DOCKER -v)" == *podman* ]]
}

is_rootless() {
  if is_podman; then
    [[ "$($DOCKER info --format '{{.Host.Security.Rootless}}')" == 'true' ]]
    return
  fi

  [[ "$($DOCKER info --format '{{.SecurityOptions}}')" == *rootless* ]] ||
    [[ "$($DOCKER version --format '{{.Client.Os}}')" == 'darwin' ]]
}

# Outputs the host's Bazel output user root.
# See https://docs.bazel.build/versions/4.2.1/output_directories.html
get_host_output_user_root() {
  local output_root
  if [[ "${OSTYPE}" == 'darwin'* ]]; then
    output_root='/private/var/tmp'
  else
    output_root="${HOME}/.cache/bazel"
  fi
  echo "${output_root}/_bazel_${USER}"
}

get_host_cache_dir() {
  if [[ -v XDG_CACHE_HOME ]]; then
    echo "${XDG_CACHE_HOME}"
  elif [[ "${OSTYPE}" == 'darwin'* ]]; then
    echo "${HOME}/Library/Caches"
  else
    echo "${HOME}/.cache"
  fi
}

ensure_host_bazelisk_cache_dir() {
  local host_cache_dir
  host_cache_dir="$(get_host_cache_dir)"
  readonly host_cache_dir

  readonly bazelisk_cache_dir="${host_cache_dir}/bazelisk"
  mkdir -p "${bazelisk_cache_dir}"
  echo "${bazelisk_cache_dir}"
}

main() {
  check_bash_version

  local host_output_user_root
  host_output_user_root="$(get_host_output_user_root)"
  readonly host_output_user_root
  mkdir -p "${host_output_user_root}"

  local host_bazelisk_cache_dir
  host_bazelisk_cache_dir="$(ensure_host_bazelisk_cache_dir)"
  readonly host_bazelisk_cache_dir

  local -a docker_options=(
    '-it'
    '--rm'
    '--network=host'
    '--entrypoint=/usr/bin/bazel'
    '--env'
      "BAZELISK_HOME=${BAZELISK_HOME}"
    '--mount'
      "type=bind,source=${PWD},target=${PWD}"
    '--mount'
      "type=bind,source=${host_output_user_root},target=${OUTPUT_USER_ROOT}"
    '--mount'
      "type=bind,source=${host_bazelisk_cache_dir},target=${BAZELISK_HOME}"
    "--workdir=${PWD}"
  )

  if ! is_rootless; then
    docker_options+=(
      "--user=${EUID}:$(id -g)"
      "--env=USER=${USERNAME}"
    )
  fi

  local -a startup_options=(
    "--output_user_root=${OUTPUT_USER_ROOT}"
  )
  while [[ "$1" =~ [[:space:]]*-.* ]]; do
    startup_options+=("$1")
    shift 1
  done

  local command="$1"
  shift 1

  exec "${DOCKER}" run "${docker_options[@]}" \
    "${IMAGE}" \
    "${startup_options[@]}" \
    "${command}" \
    --config=container \
    "$@"
}

main "$@"
