module(
    name = "cross-media-measurement-system",
    repo_name = "wfa_measurement_system",
)

BORINGSSL_VERSION = "0.20241209.0"

# Version of Apache Beam.
#
# Version compatibility info:
# * https://cloud.google.com/dataflow/docs/guides/installing-beam-sdk
# * https://cloud.google.com/dataflow/docs/support/sdk-version-support-status#apache-beam-2.x-sdks
# * https://beam.apache.org/documentation/runners/flink/#flink-version-compatibility
# * https://docs.aws.amazon.com/kinesisanalytics/latest/java/earlier.html
APACHE_BEAM_VERSION = "2.45.0"

K8S_CLIENT_VERSION = "21.0.1"

#  --- WFA registry modules. ---

# Must come before rules_kotlin due to toolchain resolution precedence.
# See https://github.com/bazelbuild/bazel/discussions/23075.
bazel_dep(
    name = "rules_kotlin_jvm",
    version = "0.6.0",
    repo_name = "wfa_rules_kotlin_jvm",
)
bazel_dep(
    name = "rules_swig",
    version = "0.1.0",
    repo_name = "wfa_rules_swig",
)
bazel_dep(
    name = "rules_cue",
    version = "0.4.0",
    repo_name = "wfa_rules_cue",
)
bazel_dep(
    name = "common-jvm",
    version = "0.101.1",
    repo_name = "wfa_common_jvm",
)
bazel_dep(
    name = "common-cpp",
    version = "0.13.0",
    repo_name = "wfa_common_cpp",
)
bazel_dep(
    name = "cross-media-measurement-api",
    version = "0.74.1",
    repo_name = "wfa_measurement_proto",
)
bazel_dep(
    name = "consent-signaling-client",
    version = "0.22.0",
    repo_name = "wfa_consent_signaling_client",
)
bazel_dep(
    name = "any-sketch",
    version = "0.10.0",
    repo_name = "any_sketch",
)
bazel_dep(
    name = "any-sketch-java",
    version = "0.8.0",
    repo_name = "any_sketch_java",
)
bazel_dep(
    name = "googleapis",
    version = "0.0.0-20250120-318818b.bzlmod.2",
    repo_name = "com_google_googleapis",
)
bazel_dep(
    name = "private-join-and-compute",
    version = "0.0.0-20230417-e028e59",
    repo_name = "com_google_private_join_and_compute",
)
bazel_dep(
    name = "virtual-people-common",
    version = "0.5.0",
    repo_name = "wfa_virtual_people_common",
)
bazel_dep(
    name = "grpc_ecosystem_grpc_gateway",
    version = "2.26.0.bzlmod.1",
)
bazel_dep(
    name = "cloud-spanner-emulator-bin",
    version = "1.5.23",
    repo_name = "cloud_spanner_emulator",
)
bazel_dep(
    name = "shell-encryption",
    version = "0.0.0-20241214-b381c4e",
    repo_name = "com_github_google_shell",
)

# --- Bazel Central Registry modules. ---

bazel_dep(
    name = "platforms",
    version = "0.0.10",
)
bazel_dep(
    name = "bazel_skylib",
    version = "1.7.1",
)
bazel_dep(
    name = "rules_proto",
    version = "7.1.0",
)
bazel_dep(
    name = "rules_cc",
    version = "0.1.1",
)
bazel_dep(
    name = "rules_pkg",
    version = "1.0.1",
)
bazel_dep(
    name = "rules_go",
    version = "0.52.0",
    repo_name = "io_bazel_rules_go",
)
bazel_dep(
    name = "gazelle",
    version = "0.41.0",
    repo_name = "bazel_gazelle",
)
bazel_dep(
    name = "rules_java",
    version = "8.7.1",
)
bazel_dep(
    name = "rules_jvm_external",
    version = "6.6",
)
bazel_dep(
    name = "rules_python",
    version = "1.1.0",
)

# Must be compatible with the protobuf version declared in requirements.txt
bazel_dep(
    name = "protobuf",
    version = "29.3",
    repo_name = "com_google_protobuf",
)
bazel_dep(
    name = "aspect_rules_ts",
    version = "3.1.0",
)
bazel_dep(
    name = "aspect_rules_js",
    version = "2.0.0",
)
bazel_dep(
    name = "aspect_rules_webpack",
    version = "0.16.0",
)
bazel_dep(
    name = "aspect_rules_jest",
    version = "0.22.0",
)
bazel_dep(
    name = "aspect_bazel_lib",
    version = "2.7.7",
)
bazel_dep(
    name = "abseil-cpp",
    version = "20240722.0.bcr.2",
    repo_name = "com_google_absl",
)
bazel_dep(
    name = "googletest",
    version = "1.15.2",
    repo_name = "com_google_googletest",
)
bazel_dep(
    name = "glog",
    version = "0.7.1",
    repo_name = "com_github_google_glog",
)
bazel_dep(
    name = "boringssl",
    version = BORINGSSL_VERSION,
)
bazel_dep(
    name = "bazel_jar_jar",
    version = "0.1.0",
)
bazel_dep(
    name = "riegeli",
    version = "0.0.0-20240606-973b6f0",
    repo_name = "com_google_riegeli",
)
bazel_dep(
    name = "tink_cc",
    version = "2.1.3",
)
bazel_dep(
    name = "rules_oci",
    version = "2.2.1",
)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.artifact(
    artifact = "beam-runners-google-cloud-dataflow-java",
    exclusions = ["org.apache.beam:beam-sdks-java-io-kafka"],
    group = "org.apache.beam",
)
maven.artifact(
    artifact = "beam-sdks-java-io-google-cloud-platform",
    exclusions = [
        # Prevent netty-tcnative being used instead of Conscrypt.
        "io.netty:netty-tcnative-boringssl-static",
    ],
    group = "org.apache.beam",
)
maven.install(
    artifacts = [
        "com.google.crypto.tink:tink-awskms:1.9.1",
        "com.google.crypto.tink:tink-gcpkms:1.9.0",
        "com.squareup.okhttp3:okhttp:4.12.0",
        "io.opentelemetry.semconv:opentelemetry-semconv:1.22.0-alpha",
        "io.kubernetes:client-java:" + K8S_CLIENT_VERSION,
        "io.kubernetes:client-java-extended:" + K8S_CLIENT_VERSION,
        "joda-time:joda-time:2.10.10",
        "org.slf4j:slf4j-simple:1.7.32",

        # Google Cloud
        "com.google.cloud:google-cloud-bigquerystorage",
        "com.google.cloud:google-cloud-security-private-ca",
        # TODO(googleapis/java-cloud-bom#5279): Remove when managed by BOM.
        "com.google.apis:google-api-services-storage:v1-rev20240706-2.0.0",
        "com.google.cloud.functions.invoker:java-function-invoker:1.4.0",

        # AWS
        "software.amazon.awssdk:acmpca",

        # Apache Beam
        "org.apache.beam:beam-runners-direct-java",
        "org.apache.beam:beam-runners-spark",
        "org.apache.beam:beam-sdks-java-core",

        # CEL
        "org.projectnessie.cel:cel-core",
        "org.projectnessie.cel:cel-generated-pb",

        # Bouncy Castle
        "org.bouncycastle:bcpkix-jdk18on:1.79",
    ],
    boms = [
        "org.apache.beam:beam-sdks-java-bom:" + APACHE_BEAM_VERSION,
        "org.projectnessie.cel:cel-bom:0.5.0",
    ],
    fail_if_repin_required = True,
    fetch_sources = True,  # For IDE integration.
    lock_file = "//:maven_install.json",
    resolver = "maven",
    strict_visibility = True,
)
use_repo(maven, "maven")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

GO_GENPROTO_VERSION = "v0.0.0-20250115164207-1a7da9e5054f"

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.module(
    path = "github.com/golang/glog",
    sum = "h1:CNNw5U8lSiiBk7druxtSHHTsRWcxKoac6kZKm2peBBc=",
    version = "v1.2.4",
)
go_deps.module(
    path = "google.golang.org/genproto",
    sum = "h1:387Y+JbxF52bmesc8kq1NyYIp33dnxCw6eiA7JMsTmw=",
    version = GO_GENPROTO_VERSION,
)
go_deps.module(
    path = "google.golang.org/genproto/googleapis/api",
    sum = "h1:gap6+3Gk41EItBuyi4XX/bp4oqJ3UwuIMl25yGinuAA=",
    version = GO_GENPROTO_VERSION,
)
go_deps.module(
    path = "google.golang.org/genproto/googleapis/rpc",
    sum = "h1:OxYkA3wjPsZyBylwymxSHa7ViiW1Sml4ToBrncvFehI=",
    version = GO_GENPROTO_VERSION,
)
go_deps.module(
    path = "google.golang.org/grpc",
    sum = "h1:MF5TftSMkd8GLw/m0KM6V8CMOCY6NZ1NQDPGFgbTt4A=",
    version = "v1.69.4",
)
go_deps.module(
    path = "cloud.google.com/go/longrunning",
    sum = "h1:3tyw9rO3E2XVXzSApn1gyEEnH2K9SynNQjMlBi3uHLg=",
    version = "v0.6.4",
)
use_repo(
    go_deps,
    "com_github_golang_glog",
    "com_google_cloud_go_longrunning",
    "org_golang_google_genproto",
    "org_golang_google_genproto_googleapis_api",
    "org_golang_google_genproto_googleapis_rpc",
    "org_golang_google_grpc",
)

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    # Allow containerized builds using rootless Docker.
    # See https://github.com/bazelbuild/rules_python/pull/713#issuecomment-1885628496
    ignore_root_user_error = True,
    python_version = "3.11",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.11",
    requirements_lock = "//:requirements.txt",
)
use_repo(pip, "pip")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "go_image_base",
    # Digest of `nonroot` tag.
    digest = "sha256:97d15218016debb9b6700a8c1c26893d3291a469852ace8d8f7d15b2f156920f",
    image = "gcr.io/distroless/base",
    platforms = ["linux/amd64"],
)
use_repo(
    oci,
    "go_image_base",
    "go_image_base_linux_amd64",
)

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "private_membership",
    sha256 = "b1e0e7f74f4da09a6011c6fa91d7b968cdff6bb571712490dae427704b2af14c",
    strip_prefix = "private-membership-84e45669f7357bffcdafbc1b0cc26e72512808ce",
    url = "https://github.com/google/private-membership/archive/84e45669f7357bffcdafbc1b0cc26e72512808ce.zip",
)

http_archive(
    name = "uk_pilot_event_templates",
    sha256 = "e5d9cb0f6087b6286f5bfeb053a968870c88c27fa7a5dc40055ae7681dad9b2c",
    strip_prefix = "uk-pilot-event-templates-0.2.0",
    url = "https://github.com/world-federation-of-advertisers/uk-pilot-event-templates/archive/refs/tags/v0.2.0.tar.gz",
)

# Force use of newer version of boringssl.
single_version_override(
    module_name = "boringssl",
    version = BORINGSSL_VERSION,
)
