load("@rules_java//java:defs.bzl", "java_binary")
load("@io_bazel_rules_kotlin//kotlin:kotlin.bzl", "kt_jvm_library")
load("@io_bazel_rules_docker//java:image.bzl", "java_image")

kt_jvm_library(
    name = "async_computation_control_server",
    srcs = ["AsyncComputationControlServer.kt"],
    runtime_deps = ["@io_grpc_grpc_java//netty"],
    deps = [
        "//imports/java/picocli",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "//src/main/kotlin/org/wfanet/measurement/common/identity",
        "//src/main/kotlin/org/wfanet/measurement/duchy/db/computation",
        "//src/main/kotlin/org/wfanet/measurement/duchy/deploy/common:flags",
        "//src/main/kotlin/org/wfanet/measurement/duchy/service/internal/computationcontrol:async_computation_control_service",
        "//src/main/proto/wfa/measurement/internal/duchy:computations_service_kt_jvm_grpc",
    ],
)

java_binary(
    name = "AsyncComputationControlServer",
    main_class = "org.wfanet.measurement.duchy.deploy.common.server.AsyncComputationControlServerKt",
    runtime_deps = [":async_computation_control_server"],
)

java_image(
    name = "async_computation_control_server_image",
    data = ["@grpc_health_probe//file"],
    main_class = "org.wfanet.measurement.duchy.deploy.common.server.AsyncComputationControlServerKt",
    visibility = ["//src:docker_image_deployment"],
    runtime_deps = [":async_computation_control_server"],
)

kt_jvm_library(
    name = "computation_control_server",
    srcs = ["ComputationControlServer.kt"],
    visibility = ["//src/main/kotlin/org/wfanet/measurement/duchy/deploy:__subpackages__"],
    runtime_deps = ["@io_grpc_grpc_java//netty"],
    deps = [
        "//imports/java/picocli",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "//src/main/kotlin/org/wfanet/measurement/common/identity",
        "//src/main/kotlin/org/wfanet/measurement/duchy/db/computation",
        "//src/main/kotlin/org/wfanet/measurement/duchy/deploy/common:flags",
        "//src/main/kotlin/org/wfanet/measurement/duchy/service/system/v1alpha:computation_control_service",
        "//src/main/proto/wfa/measurement/internal/duchy:async_computation_control_service_kt_jvm_grpc",
    ],
)

kt_jvm_library(
    name = "forwarded_storage_computation_control_server",
    srcs = ["ForwardedStorageComputationControlServer.kt"],
    deps = [
        ":computation_control_server",
        "//imports/java/picocli",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/storage/forwarded",
    ],
)

java_binary(
    name = "ForwardedStorageComputationControlServer",
    main_class = "org.wfanet.measurement.duchy.deploy.common.server.ForwardedStorageComputationControlServerKt",
    runtime_deps = [":forwarded_storage_computation_control_server"],
)

java_image(
    name = "forwarded_storage_computation_control_server_image",
    data = ["@grpc_health_probe//file"],
    main_class = "org.wfanet.measurement.duchy.deploy.common.server.ForwardedStorageComputationControlServerKt",
    visibility = [
        "//src:docker_image_deployment",
    ],
    runtime_deps = [":forwarded_storage_computation_control_server"],
)

kt_jvm_library(
    name = "computations_server",
    srcs = ["ComputationsServer.kt"],
    visibility = ["//src/main/kotlin/org/wfanet/measurement/duchy/deploy:__subpackages__"],
    runtime_deps = [
        "@io_grpc_grpc_java//netty",
    ],
    deps = [
        "//imports/java/picocli",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "//src/main/kotlin/org/wfanet/measurement/duchy/deploy/common:flags",
        "//src/main/kotlin/org/wfanet/measurement/duchy/service/internal/computation",
        "//src/main/kotlin/org/wfanet/measurement/duchy/service/internal/computationstats:service",
    ],
)
