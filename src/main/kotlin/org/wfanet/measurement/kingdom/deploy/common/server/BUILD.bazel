load("@rules_java//java:defs.bzl", "java_binary")
load("@io_bazel_rules_kotlin//kotlin:kotlin.bzl", "kt_jvm_library")
load("@io_bazel_rules_docker//java:image.bzl", "java_image")

kt_jvm_library(
    name = "legacy_kingdom_data_server",
    srcs = ["LegacyKingdomDataServer.kt"],
    visibility = ["//src/main/kotlin/org/wfanet/measurement/kingdom/deploy:__subpackages__"],
    deps = [
        "//imports/kotlin/kotlinx/coroutines:core",
        "//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "//src/main/kotlin/org/wfanet/measurement/common/identity",
        "//src/main/kotlin/org/wfanet/measurement/kingdom/db",
        "//src/main/kotlin/org/wfanet/measurement/kingdom/service/internal:legacy",
    ],
)

kt_jvm_library(
    name = "kingdom_data_server",
    srcs = ["KingdomDataServer.kt"],
    visibility = ["//src/main/kotlin/org/wfanet/measurement/kingdom/deploy:__subpackages__"],
    deps = [
        "//imports/kotlin/kotlinx/coroutines:core",
        "//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "//src/main/kotlin/org/wfanet/measurement/common/identity",
        "//src/main/kotlin/org/wfanet/measurement/kingdom/db",
        "//src/main/kotlin/org/wfanet/measurement/kingdom/deploy/common/service:data_services",
        "//src/main/kotlin/org/wfanet/measurement/kingdom/service/internal:legacy",
    ],
)

kt_jvm_library(
    name = "kingdom_api_server",
    srcs = ["KingdomApiServer.kt"],
    deps = [
        "//imports/java/io/grpc:api",
        "//imports/java/picocli",
        "//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "//src/main/kotlin/org/wfanet/measurement/common/identity",
    ],
)

kt_jvm_library(
    name = "global_computation_server",
    srcs = ["GlobalComputationServer.kt"],
    runtime_deps = ["//imports/java/io/grpc/netty"],
    deps = [
        ":kingdom_api_server",
        "//imports/java/io/grpc:api",
        "//imports/java/picocli",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "//src/main/kotlin/org/wfanet/measurement/kingdom/service/system/v1alpha:global_computation_service",
    ],
)

java_binary(
    name = "GlobalComputationServer",
    main_class = "org.wfanet.measurement.kingdom.deploy.common.server.GlobalComputationServerKt",
    runtime_deps = [":global_computation_server"],
)

java_image(
    name = "global_computation_server_image",
    data = ["@grpc_health_probe//file"],
    main_class = "org.wfanet.measurement.kingdom.deploy.common.server.GlobalComputationServerKt",
    visibility = ["//src:docker_image_deployment"],
    runtime_deps = [":global_computation_server"],
)

kt_jvm_library(
    name = "requisition_server",
    srcs = ["RequisitionServer.kt"],
    runtime_deps = ["//imports/java/io/grpc/netty"],
    deps = [
        ":kingdom_api_server",
        "//imports/java/io/grpc:api",
        "//imports/java/picocli",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "//src/main/kotlin/org/wfanet/measurement/kingdom/service/api/v1alpha:requisition_service",
    ],
)

java_binary(
    name = "RequisitionServer",
    main_class = "org.wfanet.measurement.kingdom.deploy.common.server.RequisitionServerKt",
    runtime_deps = [":requisition_server"],
)

java_image(
    name = "requisition_server_image",
    data = ["@grpc_health_probe//file"],
    main_class = "org.wfanet.measurement.kingdom.deploy.common.server.RequisitionServerKt",
    visibility = ["//src:docker_image_deployment"],
    runtime_deps = [":requisition_server"],
)

kt_jvm_library(
    name = "system_requisition_server",
    srcs = ["SystemRequisitionServer.kt"],
    runtime_deps = ["//imports/java/io/grpc/netty"],
    deps = [
        ":kingdom_api_server",
        "//imports/java/io/grpc:api",
        "//imports/java/picocli",
        "//src/main/kotlin/org/wfanet/measurement/common",
        "//src/main/kotlin/org/wfanet/measurement/common/grpc",
        "//src/main/kotlin/org/wfanet/measurement/kingdom/service/system/v1alpha:requisition_service",
    ],
)

java_binary(
    name = "SystemRequisitionServer",
    main_class = "org.wfanet.measurement.kingdom.deploy.common.server.SystemRequisitionServerKt",
    runtime_deps = [":system_requisition_server"],
)

java_image(
    name = "system_requisition_server_image",
    data = ["@grpc_health_probe//file"],
    main_class = "org.wfanet.measurement.kingdom.deploy.common.server.SystemRequisitionServerKt",
    visibility = ["//src:docker_image_deployment"],
    runtime_deps = [":system_requisition_server"],
)
