// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.panelmatch.client.privatemembership;

import "wfa/panelmatch/client/privatemembership/query.proto";

option java_package = "org.wfanet.panelmatch.client.privatemembership";
option java_multiple_files = true;

// A request to get a public/private key pair
message GenerateKeysRequest {
  bytes serialized_parameters = 1;
}

message GenerateKeysResponse {
  bytes serialized_public_key = 1;
  bytes serialized_private_key = 2;
}

// Used in the request to encrypt a set of queries
message UnencryptedQuery {
  ShardId shard_id = 1;
  QueryId query_id = 2;
  BucketId bucket_id = 3;
}

// A request to encrypt a set of queries
message PrivateMembershipEncryptRequest {
  bytes serialized_parameters = 1;
  bytes serialized_public_key = 2;
  bytes serialized_private_key = 3;
  repeated UnencryptedQuery unencrypted_queries = 4;
}

// Used in the response to encrypt a set of queries
message EncryptedQuery {
  ShardId shard_id = 1;
  QueryId query_id = 2;
}

// A set of queries compressed and prepared for oblivious expansion
message PrivateMembershipEncryptResponse {
  repeated bytes ciphertexts = 1;
  repeated EncryptedQuery encrypted_query = 2;
  bytes metadata = 3;
}

// A request to remove RLWE-encryption from a set of results.
message PrivateMembershipDecryptRequest {
  bytes serialized_parameters = 1;
  bytes serialized_public_key = 2;
  bytes serialized_private_key = 3;
  repeated EncryptedQueryResult encrypted_query_results = 4;
}

// This response contains queries with RLWE-encryption removed. The query
// results are encrypted with another encryption scheme separately which is not
// removed during this step.
message PrivateMembershipDecryptResponse {
  repeated DecryptedQueryResult decrypted_query_results = 1;
}
