// Copyright 2025 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.edpaggregator.v1alpha;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "wfa/measurement/edpaggregator/v1alpha/requisition_metadata.proto";

option java_package = "org.wfanet.measurement.edpaggregator.v1alpha";
option java_multiple_files = true;
option java_outer_classname = "RequisitionMetadataActionsServiceProto";

// Service for managing RequisitionMetadataActions.
//
// Used for auditing and logging state changes for RequisitionMetadata.
service RequisitionMetadataActionService {
  // Retrieves a specific RequisitionMetadataAction entry.
  rpc GetRequisitionMetadataAction(GetRequisitionMetadataActionRequest)
      returns (RequisitionMetadataAction) {
    option (google.api.method_signature) = "name";
  }

  // Lists RequisitionMetadataAction entries for a given RequisitionMetadata.
  rpc ListRequisitionMetadataActions(ListRequisitionMetadataActionsRequest)
      returns (ListRequisitionMetadataActionsResponse) {
    option (google.api.method_signature) = "parent";
  }
}

// Request message for the `GetRequisitionMetadataAction` method.
message GetRequisitionMetadataActionRequest {
  // The resource name of the RequisitionMetadataAction to retrieve.
  // Format:
  // `dataProviders/{data_provider}/requisitionMetadata/{requisition_metadata}/actions/{action}`
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "edpaggregator.halo-cmm.org/RequisitionMetadataAction"
    }
  ];
}

// Request message for the `ListRequisitionMetadataActions` method.
message ListRequisitionMetadataActionsRequest {
  // The parent RequisitionMetadata resource name.
  // Format:
  // `dataProviders/{data_provider}/requisitionMetadata/{requisition_metadata}`
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "edpaggregator.halo-cmm.org/RequisitionMetadataAction"
    }
  ];

  // The maximum number of results to return.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // A page token, received from a previous `ListRequisitionMetadataActions`
  // call.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];

  // Filtering criteria for the list request.
  message Filter {
    // Filter by the entity that performed the action.
    RequisitionMetadataAction.ActionerType actioner_type = 1
        [(google.api.field_behavior) = OPTIONAL];

    // Filter by the state of the requisition before the action.
    // (-- api-linter: core::0216::state-field-output-only=disabled
    //     aip.dev/not-precedent: Used for filtering input. --)
    RequisitionMetadata.State prior_state = 2
        [(google.api.field_behavior) = OPTIONAL];

    // Filter by the state of the requisition after the action.
    // (-- api-linter: core::0216::state-field-output-only=disabled
    //     aip.dev/not-precedent: Used for filtering input. --)
    RequisitionMetadata.State new_state = 3
        [(google.api.field_behavior) = OPTIONAL];
  }
  // The filter to apply to the list. All filter fields are optional.
  // (-- api-linter: core::0132::request-field-types=disabled
  //     aip.dev/not-precedent: Customized message is used for the filter  --)
  Filter filter = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for the `ListRequisitionMetadataActions` method.
message ListRequisitionMetadataActionsResponse {
  // A list of `RequisitionMetadataAction` entries matching the request.
  repeated RequisitionMetadataAction requisition_metadata_actions = 1;

  // A token to retrieve the next page of results.
  string next_page_token = 2;
}
