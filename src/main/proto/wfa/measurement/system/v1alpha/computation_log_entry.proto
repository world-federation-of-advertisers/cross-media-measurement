// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.system.v1alpha;

import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";
import "wfa/measurement/system/v1alpha/stage_attempt.proto";

option java_package = "org.wfanet.measurement.system.v1alpha";
option java_multiple_files = true;
option java_outer_classname = "ComputationLogEntryProto";

// Resource representing a log entry for a `ComputationParticipant`. Immutable.
message ComputationLogEntry {
  option (google.api.resource) = {
    type: "halo-system.wfanet.org/ComputationLogEntry"

    // `duchy` is the Duchy ID from the public API.
    pattern: "computations/{computation}/participants/{duchy}/logEntries/{computation_log_entry}"
  };

  // Resource name. Output-only. Immutable.
  string name = 1;

  // ID of some child of the `ComputationParticipant` from an external system.
  //
  // For example, this may identify a specific job or task.
  string participant_child_reference_id = 2;

  // Free-form human-readable log message. This should not include any sensitive
  // info.
  string log_message = 3;

  // Information about the stage attempt. Set if the log event occurred during
  // stage processing.
  StageAttempt stage_attempt = 4;

  message ErrorDetails {
    // Type of error for a `ComputationLogEntry`.
    enum Type {
      TYPE_UNSPECIFIED = 0;

      // Transient error.
      //
      // The parent `Computation` may not be in the `FAILED` state. The stage
      // may be reattempted.
      TRANSIENT = 1;

      // Permanent error. Output-only.
      //
      // The parent `Computation` will be in the `FAILED` state.
      PERMANENT = 2;
    }
    // Type of error for this `ComputationLogEntry`. Required. Immutable.
    Type type = 1;

    // Time that the error occurred.
    google.protobuf.Timestamp error_time = 2;
  }
  // Details for a computation error. Only set if this `ComputationLogEntry` is
  // for an error event.
  ErrorDetails error_details = 5;
}
