// Copyright 2025 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.privacybudgetmanager;

import "wfa/measurement/privacybudgetmanager/privacy_landscape.proto";

option java_package = "org.wfanet.measurement.privacybudgetmanager";
option java_multiple_files = true;
option java_outer_classname = "PrivacyLandscapeMappingProto";

// Represents a mapping from one PrivacyLandscape to another.
// Using this proto PBM maps all the PrivacyBuckets that was defined in a
// given from_landscape to a given to_landscape.
message PrivacyLandscapeMapping {
  string from_landscape = 1;
  string to_landscape = 2;

  repeated DimensionMapping mappings = 3;
  repeated DimensionAddition addition = 4;

  // Represents that every row represented [fromLandscape] should be fanned out
  // to this new dimension.
  message DimensionAddition {
    PrivacyLandscape.Dimension new_dimension = 1;
  }

  // Represents that all from_dimension charges should be copied to
  // field values specified by to_dimension
  message DimensionMapping {
    PrivacyLandscape.Dimension from_dimension = 1;
    PrivacyLandscape.Dimension to_dimension = 2;
  }
}
