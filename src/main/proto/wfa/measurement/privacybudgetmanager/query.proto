// Copyright 2025 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.privacybudgetmanager;

import "wfa/measurement/privacybudgetmanager/charges.proto";

option java_package = "org.wfanet.measurement.privacybudgetmanager";
option java_multiple_files = true;
option java_outer_classname = "QueryProto";

message Reference {
  // The external system reference id. This is likely the requisition id.
  string id = 1;
  // The id of the measurement consumre this charge belongs to.
  string measurement_consumer_id = 2;
  // Specifies if the charge is a refund or not.
  bool is_refund = 3;
}

message OpenEndTimeRange {
  // Represents the start time. Can be absent if the range is open at the beginning.
  optional int64 start_time_millis = 1;
  // Represents the end time. Can be absent if the range is open at the end.
  optional int64 end_time_millis = 2;
}

message EventGroupLandscapeMask {
  // The event group the charges belong to.
  string event_group_id = 1;
  // CEL event filter used to determine the filter the population 
  // fields to get the targetted buckets.
  string event_filter = 2;
  // Time range filter used to get the targetted buckets.
  OpenEndTimeRange time_range = 3;
  // Vid ranges used to get the targetted buckets.
  float vid_sample_start = 4;
  float vid_sample_width = 5;
}

message Query {
  // Represents the external system reference for the query.
  Reference reference = 1;
  // Contains all the information to find the buckets to charge.
  repeated EventGroupLandscapeMask event_group_landscape_masks = 2;
  // The charge itself.
  AcdpCharge acdp_charge = 3;
  // Which privacy landscape the targetted buckets belong to.
  string privacy_landscape_name = 4;
}