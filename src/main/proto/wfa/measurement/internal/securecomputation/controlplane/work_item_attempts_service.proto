// Copyright 2025 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.securecomputation.controlplane;

import "wfa/measurement/internal/securecomputation/controlplane/work_item_attempt.proto";

option java_package = "org.wfanet.measurement.internal.securecomputation.controlplane";
option java_multiple_files = true;
option java_outer_classname = "WorkItemAttemptsServiceProto";

// Internal service for persistence of `WorkItem` entities.
service WorkItemAttempts {

  rpc CreateWorkItemAttempt(CreateWorkItemAttemptRequest) returns (WorkItemAttempt);

  rpc GetWorkItemAttempt(GetWorkItemAttemptRequest) returns (WorkItemAttempt);

  rpc StreamWorkItemAttempts(StreamWorkItemAttemptsRequest) returns (stream WorkItemAttempt);

  rpc CompleteWorkItemAttempt(CompleteWorkItemAttemptRequest) returns (WorkItemAttempt);

  rpc FailWorkItemAttempt(FailWorkItemAttemptRequest) returns (WorkItemAttempt);
}

message CreateWorkItemAttemptRequest {
  WorkItemAttempt work_item_attempt = 1;
}

message GetWorkItemAttemptRequest {
  fixed64 work_item_resource_id = 1;
  fixed64 work_item_attempt_resource_id = 2;
}

message StreamWorkItemAttemptsRequest {
  message Filter {
    fixed64 work_item_resource_id = 1;
    fixed64 work_item_attempt_resource_id_after = 2;
  }
  Filter filter = 1;

  int32 limit = 2;
}

message CompleteWorkItemAttemptRequest {
  fixed64 work_item_resource_id = 1;
  fixed64 work_item_attempt_resource_id = 2;
}

message FailWorkItemAttemptRequest {
  fixed64 work_item_resource_id = 1;
  fixed64 work_item_attempt_resource_id = 2;
  // Human-readable error message. This should not include any sensitive info.
  string error_message = 3;
}
