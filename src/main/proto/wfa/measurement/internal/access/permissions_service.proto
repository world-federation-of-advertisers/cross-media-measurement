// Copyright 2024 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.access;

import "wfa/measurement/internal/access/permission.proto";

option java_package = "org.wfanet.measurement.internal.access";
option java_multiple_files = true;
option java_outer_classname = "PermissionsServiceProto";

service Permissions {
  // Gets a `Permission` by resource ID.
  //
  // Error reasons:
  // * `PERMISSION_NOT_FOUND`
  rpc GetPermission(GetPermissionRequest) returns (Permission);

  // Lists `Permission`s ordered by resource ID.
  rpc ListPermissions(ListPermissionsRequest) returns (ListPermissionsResponse);

  // Checks what permissions a `Principal` has on a given resource.
  //
  // Error reasons:
  // * `PRINCIPAL_NOT_FOUND`
  // * `PERMISSION_NOT_FOUND`
  rpc CheckPermissions(CheckPermissionsRequest)
      returns (CheckPermissionsResponse);
}

message GetPermissionRequest {
  string permission_resource_id = 1;
}

message ListPermissionsRequest {
  // The maximum number of results to return.
  //
  // If unspecified, at most 50 results will be returned. The maximum value is
  // 100; values above this will be coerced to the maximum value.
  int32 page_size = 1;
  ListPermissionsPageToken page_token = 2;
}

message ListPermissionsResponse {
  repeated Permission permissions = 1;

  // Token for requesting subsequent pages.
  //
  // If not specified, there are no more results.
  ListPermissionsPageToken next_page_token = 2;
}

message CheckPermissionsRequest {
  // Name of the resource on which to check permissions.
  string protected_resource_name = 1;

  // Resource name of the `Principal`.
  string principal_resource_id = 2;

  // Set of permissions to check.
  repeated string permission_resource_ids = 3;
}

message CheckPermissionsResponse {
  // Subset of request `permissions` that `principal` has on `resource`.
  repeated string permission_resource_ids = 1;
}

message ListPermissionsPageToken {
  message After {
    string permission_resource_id = 1;
  }
  After after = 1;
}
