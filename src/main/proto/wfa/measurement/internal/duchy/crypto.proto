// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.duchy;

option java_package = "org.wfanet.measurement.internal.duchy";
option java_multiple_files = true;

// Public keys of the ElGamal cipher.
message ElGamalPublicKey {
  // Public key generator `g`.
  bytes generator = 1;
  // Public key element `y = g^x`, where `g` is the generator and `x` is the
  // secret key.
  bytes element = 2;
}

// Keys of the ElGamal cipher.
message ElGamalKeyPair {
  // Secret key of the ElGamal cipher.
  bytes secret_key = 1;
  // Public key of the ElGamal cipher.
  ElGamalPublicKey public_key = 2;
}

// A public key for asymmetric encryption.
message EncryptionPublicKey {
  enum Format {
    FORMAT_UNSPECIFIED = 0;

    // Tink Keyset format.
    //
    // `data` is a serialized google.crypto.tink.Keyset message. Encrypted
    // message values use Tink's wire format.
    //
    // See https://github.com/google/tink/blob/master/docs/WIRE-FORMAT.md,
    // https://github.com/google/tink/blob/master/proto/tink.proto.
    TINK_KEYSET = 1;
  }
  // Encryption key format. Required.
  Format format = 1;

  // The format-specific key data. Required.
  //
  // `format` and `data` together must specify all necessary information to
  // decrypt messages given a private key.
  bytes data = 2;
}
