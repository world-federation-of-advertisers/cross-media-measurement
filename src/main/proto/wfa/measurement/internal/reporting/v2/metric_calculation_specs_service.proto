// Copyright 2023 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.reporting.v2;

import "wfa/measurement/internal/reporting/v2/metric_calculation_spec.proto";

option java_package = "org.wfanet.measurement.internal.reporting.v2";
option java_multiple_files = true;

// Internal service for persistence of MetricCalculationSpec entities.
service MetricCalculationSpecs {
  rpc CreateMetricCalculationSpec(CreateMetricCalculationSpecRequest)
      returns (MetricCalculationSpec);

  rpc GetMetricCalculationSpec(GetMetricCalculationSpecRequest)
      returns (MetricCalculationSpec);

  // Response ordered by `external_metric_calculation_spec_id`, ascending.
  rpc ListMetricCalculationSpecs(ListMetricCalculationSpecsRequest)
      returns (ListMetricCalculationSpecsResponse);

  rpc BatchGetMetricCalculationSpecs(BatchGetMetricCalculationSpecsRequest)
      returns (BatchGetMetricCalculationSpecsResponse);
}

message CreateMetricCalculationSpecRequest {
  MetricCalculationSpec metric_calculation_spec = 1;
  string external_metric_calculation_spec_id = 2;
}

message GetMetricCalculationSpecRequest {
  // `MeasurementConsumer` ID from the CMMS public API.
  string cmms_measurement_consumer_id = 1;

  string external_metric_calculation_spec_id = 2;
}

message ListMetricCalculationSpecsRequest {
  // `MeasurementConsumer` ID from the CMMS public API. Required.
  string cmms_measurement_consumer_id = 1;
  // Skips to results with a resource id greater than this, exclusive.
  string external_metric_calculation_spec_id_after = 2;
  int32 limit = 3;
}

message ListMetricCalculationSpecsResponse {
  // Ordered by `external_metric_calculation_spec_id`, ascending.
  repeated MetricCalculationSpec metric_calculation_specs = 1;
  // Whether there would have been more results returned if not for the request
  // limit.
  bool limited = 2;
}

message BatchGetMetricCalculationSpecsRequest {
  // `MeasurementConsumer` ID from the CMMS public API. Required.
  string cmms_measurement_consumer_id = 1;
  repeated string external_metric_calculation_spec_ids = 2;
}

message BatchGetMetricCalculationSpecsResponse {
  repeated MetricCalculationSpec metric_calculation_specs = 1;
}
