// Copyright 2023 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.reporting.v2;

import "google/protobuf/timestamp.proto";
import "wfa/measurement/internal/reporting/v2/report_schedule_iteration.proto";

option java_package = "org.wfanet.measurement.internal.reporting.v2";
option java_multiple_files = true;

// Internal service for persistence of ReportScheduleIteration entities.
service ReportScheduleIterations {
  rpc CreateReportScheduleIteration(ReportScheduleIteration)
      returns (ReportScheduleIteration);

  rpc SetReportScheduleIterationState(SetReportScheduleIterationStateRequest)
      returns (ReportScheduleIteration);

  rpc GetReportScheduleIteration(GetReportScheduleIterationRequest)
      returns (ReportScheduleIteration);

  // TODO(@tristanvuong2021): benchmark whether list or stream is better here
  rpc ListReportScheduleIterations(ListReportScheduleIterationsRequest)
      returns (ListReportScheduleIterationsResponse);
}

message SetReportScheduleIterationStateRequest {
  // `MeasurementConsumer` ID from the CMMS public API.
  string cmms_measurement_consumer_id = 1;
  string external_report_schedule_id = 2;
  string external_report_schedule_iteration_id = 3;

  ReportScheduleIteration.State state = 4;
}

message GetReportScheduleIterationRequest {
  // `MeasurementConsumer` ID from the CMMS public API.
  string cmms_measurement_consumer_id = 1;
  string external_report_schedule_id = 2;
  string external_report_schedule_iteration_id = 3;
}

message ListReportScheduleIterationsRequest {
  message Filter {
    // `MeasurementConsumer` ID from the CMMS public API. Required.
    string cmms_measurement_consumer_id = 1;
    string external_report_schedule_id = 2;
    // Skips to results with a `report_event_time` less than this.
    google.protobuf.Timestamp report_event_time_before = 3;
  }
  Filter filter = 1;

  int32 limit = 2;
}

message ListReportScheduleIterationsResponse {
  // Ordered by `report_event_time`, descending.
  repeated ReportScheduleIteration report_schedule_iterations = 1;
}
