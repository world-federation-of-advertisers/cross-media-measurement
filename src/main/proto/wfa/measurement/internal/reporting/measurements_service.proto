// Copyright 2022 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.reporting;

import "wfa/measurement/internal/reporting/measurement.proto";

option java_package = "org.wfanet.measurement.internal.reporting";
option java_multiple_files = true;

// Internal service for persistence of Measurement entities.
service Measurements {
  rpc CreateMeasurement(Measurement) returns (Measurement);

  rpc GetMeasurement(GetMeasurementRequest) returns (Measurement);

  rpc SetMeasurementResult(SetMeasurementResultRequest) returns (Measurement);

  rpc SetMeasurementFailure(SetMeasurementFailureRequest) returns (Measurement);
}

message GetMeasurementRequest {
  // `MeasurementConsumer` ID from the CMMS public API.
  string measurement_consumer_reference_id = 1;
  // `Measurement` ID from the CMMS public API.
  string measurement_reference_id = 2;
}

message SetMeasurementResultRequest {
  // `MeasurementConsumer` ID from the CMMS public API.
  string measurement_consumer_reference_id = 1;
  // `Measurement` ID from the CMMS public API.
  string measurement_reference_id = 2;
  Measurement.Result result = 3;
}

message SetMeasurementFailureRequest {
  // `MeasurementConsumer` ID from the CMMS public API.
  string measurement_consumer_reference_id = 1;
  // `Measurement` ID from the CMMS public API.
  string measurement_reference_id = 2;

  Measurement.Failure failure = 3;
}
