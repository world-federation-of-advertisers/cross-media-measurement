// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.kingdom;

import "google/type/date.proto";
import "wfa/measurement/internal/kingdom/exchange_details.proto";

option java_package = "org.wfanet.measurement.internal.kingdom";
option java_multiple_files = true;

// An `Exchange` is a `RecurringExchange` on a particular date.
message Exchange {
  // Internal identifier of the parent `RecurringExchange`.
  fixed64 external_recurring_exchange_id = 1;

  // The date that the `Exchange` is supposed to occur. There can be at most one
  // `Exchange` for a `RecurringExchange` on any given date -- this is a part of
  // the `Exchange`'s primary key.
  google.type.Date date = 2;

  // This will be SUCCEEDED if there is an ExchangeStepAttempt for each
  // `ExchangeWorkflow.Step` in state SUCCEEDED. If any ExchangeStepAttempt is
  // PERMANENTLY_FAILED then this will be FAILED.
  enum State {
    STATE_UNSPECIFIED = 0;
    ACTIVE = 1;
    SUCCEEDED = 2;
    FAILED = 3;
  }
  State state = 3;

  // Additional metadata about the Exchange.
  ExchangeDetails details = 4;

  // Serialized ExchangeWorkflow message denormalized from the parent
  // `RecurringExchange`'s `RecurringExchangeDetails`.
  bytes serialized_recurring_exchange = 5;
}
