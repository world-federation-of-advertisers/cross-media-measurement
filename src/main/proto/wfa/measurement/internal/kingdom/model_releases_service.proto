// Copyright 2023 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.kingdom;

import "google/protobuf/timestamp.proto";
import "wfa/measurement/internal/kingdom/model_release.proto";

option java_package = "org.wfanet.measurement.internal.kingdom";
option java_multiple_files = true;

// Internal service for persistence of ModelRelease entities.
service ModelReleases {
  // Creates a new `ModelRelease`.
  rpc CreateModelRelease(ModelRelease) returns (ModelRelease);

  // Returns a single `ModelRelease`.
  rpc GetModelRelease(GetModelReleaseRequest) returns (ModelRelease);

  // Lists `ModelRelease`s.
  rpc StreamModelReleases(StreamModelReleasesRequest)
      returns (stream ModelRelease);
}

message GetModelReleaseRequest {
  fixed64 external_model_release_id = 1;
  fixed64 external_model_suite_id = 2;
  fixed64 external_model_provider_id = 3;
}

message StreamModelReleasesRequest {
  message AfterFilter {
    google.protobuf.Timestamp create_time = 1;
    fixed64 external_model_provider_id = 2;
    fixed64 external_model_suite_id = 3;
    fixed64 external_model_release_id = 4;
  }

  // Filter criteria as a conjunction of specified fields.
  message Filter {
    int64 external_model_suite_id = 1;
    int64 external_model_provider_id = 2;
    AfterFilter after = 3;
  }
  Filter filter = 1;

  // The maximum number of results to return. If not specified or 0, it implies
  // unlimited.
  int32 limit = 2;
}
