// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.kingdom;

import "wfa/measurement/internal/kingdom/differential_privacy.proto";

option java_package = "org.wfanet.measurement.internal.kingdom";
option java_multiple_files = true;

message ProtocolConfig {
  reserved 2;

  // The ID is reserved for future potential usage.
  // Currently, we directly embed the protocolConfig into `Requisition` and
  // `Measurement`.
  string external_protocol_config_id = 1;

  // Configuration for the Liquid Legions v2 R/F protocol.
  message LiquidLegionsV2 {
    // Parameters for sketch.
    LiquidLegionsSketchParams sketch_params = 1;

    // Differential privacy parameters for data provider noise registers.
    //
    // Each of these registers contains a well-known constant register ID, and
    // arbitrary key and count values.
    DifferentialPrivacyParams data_provider_noise = 2;

    // ID of the OpenSSL built-in elliptic curve. For example, 415 for the
    // prime256v1 curve. Required. Immutable.
    int32 elliptic_curve_id = 3;

    // The maximum frequency to reveal in the histogram.
    int32 maximum_frequency = 4;
  }

  // Configuration for the specific protocol.
  oneof protocol {
    // Liquid Legions v2 config.
    //
    // May only be set when the measurement type is REACH_AND_FREQUENCY.
    LiquidLegionsV2 liquid_legions_v2 = 3;
  }
}

// Parameters for a Liquid Legions sketch.
message LiquidLegionsSketchParams {
  // The decay rate of the Liquid Legions sketch.
  double decay_rate = 1;

  // The maximum size of the Liquid Legions sketch.
  int64 max_size = 2;

  // The size of the distribution of the sampling indicator value.
  int64 sampling_indicator_size = 3;
}