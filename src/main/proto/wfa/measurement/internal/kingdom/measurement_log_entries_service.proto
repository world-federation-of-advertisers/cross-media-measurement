// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.kingdom;

import "wfa/measurement/internal/kingdom/measurement_log_entry.proto";
import "wfa/measurement/internal/kingdom/duchy_measurement_log_entry.proto";
import "wfa/measurement/internal/kingdom/state_transition_measurement_log_entry.proto";

option java_package = "org.wfanet.measurement.internal.kingdom";
option java_multiple_files = true;

service MeasurementLogEntries {
  // Creates a DuchyMeasurementLogEntry entity.
  //
  // This results in an INVALID_ARGUMENT error if the entry is for a PERMANENT
  // error. The FailComputationParticipant method of the ComputationParticipants
  // service can be used instead to create such an entry.
  rpc CreateDuchyMeasurementLogEntry(CreateDuchyMeasurementLogEntryRequest)
      returns (DuchyMeasurementLogEntry);

  // Retrieve all measurement state transition log entries for a given
  // measurement
  rpc StreamStateTransitionMeasurementLogEntries(
      StreamStateTransitionMeasurementLogEntriesRequest)
      returns (stream StateTransitionMeasurementLogEntry);
}

message CreateDuchyMeasurementLogEntryRequest {
  fixed64 external_computation_id = 1;
  string external_duchy_id = 2;

  MeasurementLogEntry.Details measurement_log_entry_details = 3;
  DuchyMeasurementLogEntry.Details details = 4;
}

message StreamStateTransitionMeasurementLogEntriesRequest {
  fixed64 external_measurement_consumer_id = 1;
  fixed64 external_measurement_id = 2;
}
