// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.internal.kingdom;

import "google/type/date.proto";
import "wfa/measurement/internal/kingdom/exchange_step.proto";
import "wfa/measurement/internal/kingdom/provider.proto";

option java_package = "org.wfanet.measurement.internal.kingdom";
option java_multiple_files = true;

// Internal service for managing `ExchangeStep` resources.
service ExchangeSteps {
  // Finds an ExchangeStep in state `READY` or `READY_FOR_RETRY` and then
  // creates a new ExchangeStepAttempt for it. If none exist in this state,
  // returns an empty response.
  rpc ClaimReadyExchangeStep(ClaimReadyExchangeStepRequest)
      returns (ClaimReadyExchangeStepResponse);

  // Gets an existing `ExchangeStep`.
  rpc GetExchangeStep(GetExchangeStepRequest) returns (ExchangeStep);
}

// Request message for "/ExchangeSteps.ClaimReadyExchangeStep".
message ClaimReadyExchangeStepRequest {
  Provider provider = 1;
}

// Response message for "/ExchangeSteps.ClaimReadyExchangeStep".
message ClaimReadyExchangeStepResponse {
  ExchangeStep exchange_step = 1;
  int32 attempt_number = 2;
}

// Request message for "/ExchangeSteps.GetExchangeStep".
message GetExchangeStepRequest {
  fixed64 external_recurring_exchange_id = 1;
  google.type.Date date = 2;
  int32 step_index = 3;
  Provider provider = 4;
}