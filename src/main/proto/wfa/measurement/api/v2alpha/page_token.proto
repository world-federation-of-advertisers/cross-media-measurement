// Copyright 2021 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.api.v2alpha;

import "google/protobuf/timestamp.proto";
import "wfa/measurement/api/v2alpha/measurement.proto";
import "wfa/measurement/api/v2alpha/requisition.proto";

option java_package = "org.wfanet.measurement.api.v2.alpha";
option java_multiple_files = true;

message ListEventGroupsPageToken {
  int32 page_size = 1;
  int64 external_data_provider_id = 2;
  repeated int64 external_measurement_consumer_ids = 3;
  message PreviousPageEnd {
    fixed64 external_data_provider_id = 1;
    fixed64 external_event_group_id = 2;
  }
  PreviousPageEnd last_event_group = 4;
  bool show_deleted = 5;
}

message ListMeasurementsPageToken {
  int32 page_size = 1;
  int64 external_measurement_consumer_id = 2;
  repeated Measurement.State states = 3;
  message PreviousPageEnd {
    google.protobuf.Timestamp update_time = 1;
    fixed64 external_measurement_id = 2;
  }
  PreviousPageEnd last_measurement = 4;
}

message ListRequisitionsPageToken {
  int32 page_size = 1;
  int64 external_measurement_consumer_id = 2;
  int64 external_measurement_id = 3;
  int64 external_data_provider_id = 4;
  repeated Requisition.State states = 5;
  message PreviousPageEnd {
    fixed64 external_data_provider_id = 1;
    fixed64 external_requisition_id = 2;
  }
  PreviousPageEnd last_requisition = 6;
  repeated Measurement.State measurement_states = 7;
}

message ListReportingSetsPageToken {
  int32 page_size = 1;
  string measurement_consumer_reference_id = 2;
  message PreviousPageEnd {
    string measurement_consumer_reference_id = 1;
    fixed64 external_reporting_set_id = 2;
  }
  PreviousPageEnd last_reporting_set = 3;
}

message ListReportsPageToken {
  int32 page_size = 1;
  string measurement_consumer_reference_id = 2;
  message PreviousPageEnd {
    string measurement_consumer_reference_id = 1;
    fixed64 external_report_id = 2;
  }
  PreviousPageEnd last_report = 3;
}
