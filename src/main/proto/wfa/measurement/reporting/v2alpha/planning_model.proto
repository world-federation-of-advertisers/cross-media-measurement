// Copyright 2023 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.reporting.v2alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "wfa/measurement/reporting/v2alpha/time_interval.proto";
import "wfa/measurement/reporting/v2alpha/planning_model_spec.proto";

option java_package = "org.wfanet.measurement.reporting.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "PlanningModelProto";

message PlanningModel {
  option (google.api.resource) = {
    type: "reporting.halo-cmm.org/PlanningModel"
    pattern: "measurementConsumers/{measurement_consumer}/planningModels/{planning_model}"
  };

  // Resource name
  string name = 1;

  // The reporting sets that form the bases of the model. The planning model is
  // trained to produce reach curves over the reporting sets.
  repeated string reporting_sets = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.resource_reference) = {
      type: "reporting.halo-cmm.org/ReportingSet"
    }
  ];

  // Additional filter that is applied to all reporting sets.
  string filter = 3 [(google.api.field_behavior) = IMMUTABLE];

  // The specification that defines the planning model.
  PlanningModelSpec planning_model_spec = 4 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // The time over which to make predictions cumulatively.
  google.type.Interval time_interval = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // Possible states of a `PlanningModel`.
  enum State {
    // Default value. This value is unused.
    STATE_UNSPECIFIED = 0;
    // Training is running.
    RUNNING = 1;
    // Completed successfully. Terminal state.
    SUCCEEDED = 2;
    // Completed with failure. Terminal state.
    FAILED = 3;
  }
  // Planning model state.
  State state = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time when the planning model is successfully created.
  google.protobuf.Timestamp create_time = 7
      [(google.api.field_behavior) = OUTPUT_ONLY];
}
