// Copyright 2024 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.reporting.v2alpha;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "wfa/measurement/reporting/v2alpha/advanced_report.proto";
import "wfa/measurement/reporting/v2alpha/operation.proto";
import "wfa/measurement/reporting/v2alpha/page.proto";
import "wfa/measurement/reporting/v2alpha/reporting_interval.proto";
import "wfa/measurement/reporting/v2alpha/reporting_unit.proto";

option java_package = "org.wfanet.measurement.reporting.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "AdvancedReportsServiceProto";

service AdvancedReports {
  rpc CreateAdvancedReport(CreateAdvancedReportRequest) returns (Operation) {
    option (google.api.http) = {
      post: "/v2alpha/{parent=measurementConsumers/*}/advancedReports"
      body: "advancedReport"
    };
    option (google.api.method_signature) = "parent,advancedReport";
  }

  // Returns the `AdvancedReport` with the given resource key.
  rpc GetAdvancedReport(GetAdvancedReportRequest) returns (AdvancedReport) {
    option (google.api.http) = {
      get: "/v2alpha/{name=measurementConsumers/*/advancedReports/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Ordered by `create_time` ascending, `name` ascending.
  rpc ListAdvancedReports(ListAdvancedReportsRequest)
      returns (ListAdvancedReportsResponse) {
    option (google.api.http) = {
      get: "/v2alpha/{parent=measurementConsumers/*}/advancedReports"
    };
    option (google.api.method_signature) = "parent";
  }

  // Updates the `AdvancedReport` with the given resource key.
  //
  // Only one in-progress update Operation is allow to exist at a time.
  rpc UpdateAdvancedReport(UpdateAdvancedReportRequest) returns (Operation) {
    option (google.api.http) = {
      get: "/v2alpha/{advancedReport.name=measurementConsumers/*/advancedReports/*}"
      body: "advancedReport"
    };
    option (google.api.method_signature) = "advancedReport,update_mask";
  }

  // Queries the `AdvancedReport` with the given resource key.
  rpc QueryAdvancedReport(QueryAdvancedReportRequest)
      returns (QueryAdvancedReportResponse) {
    option (google.api.http) = {
      get: "/v2alpha/{name=measurementConsumers/*/advancedReports/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Exports the `AdvancedReport` with the given resource key.
  rpc ExportAdvancedReport(ExportAdvancedReportRequest) returns (Operation) {
    option (google.api.http) = {
      get: "/v2alpha/{name=measurementConsumers/*/advancedReports/*}"
    };
    option (google.api.method_signature) = "name";
  }
}

// Specifies an AdvancedReport query using a PageTemplate and a ReportingUnit.
message PageTemplateSpec {
  // The PageTemplate to use.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "reporting.halo-cmm.org/PageTemplate"
    }
  ];

  // The reporting unit to parameterize the PageTempalte with.
  ReportingUnit reporting_unit = 2 [(google.api.field_behavior) = REQUIRED];
}

// Specifies how to query an AdvancedReport
message QuerySpec {
  // The interval over which to query.
  //
  // If unspecified the entire interval associated with the Report is used.
  // For Weekly metrics:
  //  1) The start day must either be the start day of the report or be the
  //     same day of the week as the windowing criteria specified during report
  //     creation.
  //  2) The end date must be either the end day of the report or be the same
  //     day of the week as the windowing criteria specified during report
  //     creation.
  ReportingInterval reporting_interval = 1
      [(google.api.field_behavior) = OPTIONAL];

  // Required.
  oneof query {
    // The PageSpec that describes the query to be run.
    PageSpec page_spec = 2 [(google.api.field_behavior) = OPTIONAL];
    // A PageTemplateSpec that describes the query to be run.
    PageTemplateSpec page_template_spec = 3
        [(google.api.field_behavior) = OPTIONAL];
  }
}

// Request message for `CreateAdvancedReport` method
message CreateAdvancedReportRequest {
  // The parent Measurement Consumer
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "reporting.halo-cmm.org/AdvancedReport"
    }
  ];

  // The ID to use for the report, which will become the final component of
  // the report's resource name.
  //
  // This must conform to RFC 1034, with the additional restriction that all
  // letters must be lower-case.
  string advanced_report_id = 2 [(google.api.field_behavior) = REQUIRED];

  // The AdvancedReport to create.
  AdvancedReport advanced_report = 3;

  // A unique identifier for this request. Restricted to 36 ASCII characters.
  // A random UUID is recommended.
  // This request is only idempotent if a `request_id` is provided.
  string request_id = 4;
}

// Request message for `GetAdvancedReport` method
message GetAdvancedReportRequest {
  // The name of the Advanced report to retrieve.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "reporting.halo-cmm.org/AdvancedReport"
    }
  ];
}

// Request message for `ListAdvancedReport` method
message ListAdvancedReportsRequest {
  // The parent Measurement Consumer
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "reporting.halo-cmm.org/AdvancedReport"
    }
  ];

  // Filter criteria. Repeated fields are treated as logical ORs, and multiple
  // fields are treated as logical ANDs.
  message Filter {
    // Return AdvancedReports that were created after this time.
    // (-- api-linter: core::0140::prepositions=disabled
    //  -- api-linter: core::0142::time-field-names=disabled
    //     aip.dev/not-precedent: Structured filters are used instead of the
    //     AIP-160 filtering language --)
    google.protobuf.Timestamp create_time_after = 1
        [(google.api.field_behavior) = REQUIRED];
  }

  // Filter for the list of AdvancedReports
  // (-- api-linter: core::0132::request-field-types=disabled
  //     aip.dev/not-precedent: Structured filters are used instead of the
  //     AIP-160 filtering language --)
  Filter filter = 2 [(google.api.field_behavior) = OPTIONAL];

  // The maximum number of advanced reports to return. The service may return
  // fewer than this value. If unspecified, at most 10 advanced reports will be
  // returned. The maximum value is 25; values above 25 will be coerced to 25.
  int32 page_size = 3 [(google.api.field_behavior) = OPTIONAL];

  // A page token, received from a previous `ListAdvancedReports` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListAdvancedReports`
  // must match the call that provided the page token.
  string page_token = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for `ListAdvancedReports` method.
message ListAdvancedReportsResponse {
  // The Advanced Reports that met the filter criteria
  repeated AdvancedReport advanced_reports = 1
      [(google.api.field_behavior) = OPTIONAL];

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for `UpdateAdvancedReport` method
message UpdateAdvancedReportRequest {
  AdvancedReport advanced_report = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to update.
  google.protobuf.FieldMask update_mask = 2;
}

// Request message for `QueryAdvancedReport` method
message QueryAdvancedReportRequest {
  // Specifies the query to run.
  QuerySpec query_spec = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for `QueryAdvancedReport` method
message QueryAdvancedReportResponse {
  // The result of the query
  PageResult page_result = 1;
}

// Request message for `ExportAdvancedReport` method
message ExportAdvancedReportRequest {
  QuerySpec query_spec = 1 [(google.api.field_behavior) = REQUIRED];
}

// Message used by the long running operation to provide the
// real response to the `ExportAdvancedReport` method
message ExportAdvancedReportResponse {
  // TODO(@kungfucraig): Determine response parameters as part of the
  // detailed design of export.
}
