// Copyright 2023 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.reporting.v2alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "wfa/measurement/reporting/v2alpha/time_interval.proto";
import "wfa/measurement/reporting/v2alpha/metric.proto";

option java_package = "org.wfanet.measurement.reporting.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "MetricModelProto";

// A model for estimating metrics
message MetricModel {
  option (google.api.resource) = {
    type: "reporting.halo-cmm.org/Report"
    pattern: "measurementConsumers/{measurement_consumer}/metricModels/{metric_model}"
  };

  // Resource name.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // The specification of the model.
  message ModelSpec {
    // The metrics that this model will be estimating. Currently only support
    // reach.
    repeated MetricSpec metric_specs = 1
        [(google.api.field_behavior) = REQUIRED];

    // Types of time intervals that the model needs to cover.
    // REQUIRED
    oneof time {
      // A list of time intervals with different start times and end times.
      TimeIntervals time_intervals = 2;
      // A series of time intervals with the same length.
      PeriodicTimeInterval periodic_time_interval = 3;
    }
    // Whether the estimated metric result for a given time interval is
    // cumulative with those of previous time intervals.
    // Only supported when using `PeriodicTimeInterval`.
    bool cumulative = 4;

    // Specify the list of primitive reporting sets as the basis of the model.
    // Once trained, the model can then estimate metrics of any composite
    // reporting sets that are the subset of the span of these primitive
    // reporting sets.
    repeated string primitive_reporting_sets = 5
        [(google.api.field_behavior) = REQUIRED];
  }
  // Model spec
  ModelSpec model_spec = 2 [(google.api.field_behavior) = REQUIRED];

  // Possible states of a `MetricModel`.
  enum State {
    // Default value. This value is unused.
    STATE_UNSPECIFIED = 0;
    // The training process is running.
    TRAINING = 1;
    // The model is trained and ready to be used. Terminal state.
    ACTIVE = 2;
    // The model training failed. Terminal state.
    FAILED = 3;
  }

  // Model state
  State state = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}
