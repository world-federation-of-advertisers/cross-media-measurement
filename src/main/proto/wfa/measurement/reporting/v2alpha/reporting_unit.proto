// Copyright 2024 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.reporting.v2alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option java_package = "org.wfanet.measurement.reporting.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "ReportingUnitProto";

// Specifies the units to report on.
message ReportingUnit {
  // A list of resources to report on.
  //
  // For use with BasicReport these must be Data Provider resource names
  // For use with AdvancedReport these must be Reporting Set resource names
  repeated string components = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.resource_reference) = { type: "*" }
  ];

  // Display names of the resource referenced by the Reporting Unit
  repeated string display_name = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // Filters the impressions associated with the components by their media type,
  // and determines which impression qualification filters to apply.
  //
  // If multiple values are specified then Cross Media filters are used.
  // Other filters may be used in accordance with the measurment
  // policy. For exmaple if VIDEO and DISPLAY are specified and an
  // MRC filter is available for both then the MRC filter, as it applies to
  // the specific media type, could be applied.
  repeated MediaType reporting_media_types = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.field_behavior) = IMMUTABLE
  ];
}

// MediaType is used to designate how reporting artifacts
// should be interpreted for reporting.
enum MediaType {
  // Default value. Unused.
  REPORTING_MEDIA_TYPE_UNSPECIFIED = 0;
  // Interpret a set of arifacts as Video
  VIDEO = 1;
  // Interpret a set of arifacts as Display
  DISPLAY = 2;
  // Interpret as set of artifacts as Other
  OTHER = 3;
}
