// Copyright 2023 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.reporting.v2alpha;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";
import "wfa/measurement/reporting/v2alpha/event_group.proto";
import "wfa/measurement/reporting/v2alpha/media_type.proto";

option java_package = "org.wfanet.measurement.reporting.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "EventGroupsServiceProto";
option go_package = "github.com/world-federation-of-advertisers/cross-media-measurement/reporting/apiv2alpha/reportingpb";

// Service for interacting with `EventGroup` resources.
service EventGroups {
  // Lists `EventGroup`s. Results in a `PERMISSION_DENIED` error if attempting
  // to list `EventGroup`s that the authenticated user does not have access to.
  rpc ListEventGroups(ListEventGroupsRequest)
      returns (ListEventGroupsResponse) {
    option (google.api.http) = {
      get: "/v2alpha/{parent=measurementConsumers/*}/eventGroups"
    };
    option (google.api.method_signature) = "parent";
  }
}

// Request message for `ListEventGroups` method.
message ListEventGroupsRequest {
  // Resource name of the parent `MeasurementConsumer`.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "reporting.halo-cmm.org/EventGroup"
    }
  ];

  // The maximum number of `EventGroup`s to return. The service may return fewer
  // than this value. If unspecified, at most 50 `EventGroup`s will be
  // returned. The maximum value is 1000; values above 1000 will be coerced to
  // 1000.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // A token from a previous call, specified to retrieve the next page. See
  // https://aip.dev/158.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];

  // Structured filter criteria.
  //
  // Each field represents a term in a conjunction. If a field is not specified,
  // its value is not considered as part of the criteria.
  // (-- api-linter: core::0140::prepositions=disabled
  //     api-linter: core::0142::time-field-names=disabled
  //     aip.dev/not-precedent: Using structured filter instead of AIP-160. --)
  message Filter {
    // Set of CMMS [DataProvider][wfa.measurement.api.v2alpha.DataProvider]
    // resource names which [EventGroup.cmms_data_provider][] must be in.
    repeated string cmms_data_provider_in = 1 [
      (google.api.resource_reference).type = "halo.wfanet.org/DataProvider",
      (google.api.field_behavior) = OPTIONAL
    ];
    // Set of [MediaType][] values which [EventGroup.media_types][] must
    // intersect.
    repeated MediaType media_types_intersect = 2
        [(google.api.field_behavior) = OPTIONAL];
    // Time which
    // [EventGroup.data_availability_interval.start_time][google.type.Interval.start_time]
    // must be on or after.
    google.protobuf.Timestamp data_availability_start_time_on_or_after = 3
        [(google.api.field_behavior) = OPTIONAL];
    // Time which
    // [EventGroup.data_availability_interval.end_time][google.type.Interval.end_time]
    // must be on or before.
    google.protobuf.Timestamp data_availability_end_time_on_or_before = 4
        [(google.api.field_behavior) = OPTIONAL];
    // Query for text search on string fields in
    // [EventGroup.event_group_metadata][].
    string metadata_search_query = 5 [(google.api.field_behavior) = OPTIONAL];
  }

  // Filter criteria for results. Optional.
  oneof filter_criteria {
    // Result filter. Raw CEL expression that is applied to a message which has
    // a field for each event group template.
    //
    // Deprecated in favor of [structured_filter][].
    string filter = 4
        [(google.api.field_behavior) = OPTIONAL, deprecated = true];

    // Result filter.
    // (-- api-linter: core::0132::request-unknown-fields=disabled
    //     aip.dev/not-precedent: Using structured filter instead of AIP-160.
    //     --)
    Filter structured_filter = 5 [(google.api.field_behavior) = OPTIONAL];
  }

  // Structure for ordering results.
  message OrderBy {
    // Orderable field.
    enum Field {
      // Field unspecified.
      FIELD_UNSPECIFIED = 0;
      // [start_time][google.type.Interval.start_time] of
      // [EventGroup.data_availability_interval][].
      DATA_AVAILABILITY_START_TIME = 1;
    }
    // Field to order by.
    Field field = 1 [(google.api.field_behavior) = REQUIRED];

    // Whether the sort order is descending.
    bool descending = 2 [(google.api.field_behavior) = OPTIONAL];
  }
  // How results should be ordered.
  // (-- api-linter: core::0132::request-field-types=disabled
  //     aip.dev/not-precedent: Only supporting a limited set of orderings. --)
  OrderBy order_by = 6 [(google.api.field_behavior) = OPTIONAL];
}

// Response message for `ListEventGroups` method.
message ListEventGroupsResponse {
  // The `EventGroup` resources.
  repeated EventGroup event_groups = 1;

  // A token that can be specified in a subsequent call to retrieve the next
  // page. See https://aip.dev/158.
  string next_page_token = 2;
}
