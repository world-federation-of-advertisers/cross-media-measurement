// Copyright 2023 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.reporting.v2alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option java_package = "org.wfanet.measurement.reporting.v2alpha";
option java_multiple_files = true;
option java_outer_classname = "ReportingSetProto";

// The resource name of a reporting set.
message ReportingSet {
  option (google.api.resource) = {
    type: "reporting.halo-cmm.org/ReportingSet"
    pattern: "measurementConsumers/{measurement_consumer}/reportingSets/{reporting_set}"
  };

  // Resource name.
  string name = 1;

  // Human-readable name for display purposes.
  string display_name = 2;

  // CEL filter predicate that applies to this reporting set.
  // If unspecified, evaluates to `true`.
  string filter = 3 [(google.api.field_behavior) = IMMUTABLE];

  // Describes a set of events that share a common filter.
  //
  // It's the minimum building block of a set expression.
  message Primitive {
    // Set of EventGroup resource names.
    repeated string event_groups = 1 [
      (google.api.resource_reference).type =
          "reporting.halo-cmm.org/EventGroup",
      (google.api.field_behavior) = REQUIRED,
      (google.api.field_behavior) = IMMUTABLE
    ];
  }

  // Represents a binary set expression.
  message SetExpression {
    // Operation of binary set expression.
    enum Operation {
      // Default value. This value is unused.
      OPERATION_UNSPECIFIED = 0;
      // The set union operation.
      UNION = 1;
      // The set difference operation.
      DIFFERENCE = 2;
      // The set intersection operation.
      INTERSECTION = 3;
    }
    // The operation of binary set expression that will be applied on the
    // operands.
    Operation operation = 1 [(google.api.field_behavior) = REQUIRED];

    // The object of a set operation.
    message Operand {
      oneof operand {
        // Resource name of a `ReportingSet` describing a set operand.
        string reporting_set = 1 [(google.api.resource_reference).type =
                                      "reporting.halo-cmm.org/ReportingSet"];
        // Nested `SetExpression` to allow for expressions with more terms.
        SetExpression expression = 2;
      }
    }

    // Left-hand side operand of the operation.
    Operand lhs = 3 [(google.api.field_behavior) = REQUIRED];
    // Right-hand side operand of the operation. If not specified, implies the
    // empty set.
    Operand rhs = 4;
  }

  // Describes a set expression with a event filter. It's a
  // composite of `PrimitiveReportingSet`, `CompositeReportingSet`, and
  // `SetExpression`.
  message Composite {
    // A nested expression of binary set expressions.
    SetExpression expression = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.field_behavior) = IMMUTABLE
    ];
  }

  // Type of reporting set it is.
  oneof value {
    // The basis building block in the set expression.
    Primitive primitive = 4;
    // The composite of different types of reporting sets.
    Composite composite = 5;
  }
}
