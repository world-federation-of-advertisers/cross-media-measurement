// Copyright 2022 The Cross-Media Measurement Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package wfa.measurement.reporting.v1alpha;

import "wfa/measurement/reporting/v1alpha/event_group_specifier.proto";
import "wfa/measurement/reporting/v1alpha/report.proto";
import "wfa/measurement/reporting/v1alpha/report_parameter.proto";

option java_package = "org.wfanet.measurement.reporting.v1alpha";
option java_multiple_files = true;

service Reports {
  rpc GetReport(GetReportRequest) returns(Report) {
    option (google.api.http) = {
      get: "/v1alpha/{name=measurementConsumers/{measurement_consumer}/reports/*}"
    };
    option (google.api.method_signature) = "name";
  }

  rpc ListReports(ListReportRequest) returns(ListReportResponse) {
    option (google.api.http) = {
      get: "/v1alpha/{parent=measurementConsumers/measurement_consumer}/reports"
    };
    option (google.api.method_signature) = "parent";
  }

  rpc CreateReport(CreateReportRequest) returns(Report) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=measurementConsumers/measurement_consumer}/reports"
      body: "report"
    };
    option (google.api.method_signature) = "parent,report";
  }
}

message GetReportRequest {
  // The name of the report to retrieve.
  // Format: measurementConsumers/{measurement_consumer}/reports/{report}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "halo.wfanet.org/Report"
    }];
}

message ListReportRequest {
  // Format: measurementConsumers/{measurement_consumer}
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "halo.wfanet.org/Report"
    }];

  // The maximum number of books to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 books will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListBooks` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListBooks` must match
  // the call that provided the page token.
  string page_token = 3;
}

message ListReportResponse {
  // The reports from the specified measurement consumer.
  repeated Report reports = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

message CreateReportRequest {
  // The parent resource where this report will be created.
  // Format: measurementConsumers/{measurement_consumer}
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "halo.wfanet.org/Report"
    }];

  // The report to create.
  Report report = 2 [(google.api.field_behavior) = REQUIRED];

  repeated EventGroupSpecifier event_group_specifiers = 3;

  ReportParameter report_parameter = 4;
}


