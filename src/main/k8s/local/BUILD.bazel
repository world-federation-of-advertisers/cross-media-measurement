load("//build:variables.bzl", "TEST_K8S_SETTINGS")
load("//src/main/k8s:macros.bzl", "cue_dump")
load("//build/k8s:defs.bzl", "k8s_apply")

cue_dump(
    name = "emulators",
    srcs = ["emulators.cue"],
    cue_tags = {
        "secret_name": TEST_K8S_SETTINGS.secret_name,
    },
    tags = ["manual"],
    deps = [
        "//src/main/k8s:base",
    ],
)

cue_dump(
    name = "kingdom",
    srcs = ["kingdom.cue"],
    cue_tags = {
        "secret_name": TEST_K8S_SETTINGS.secret_name,
    },
    tags = ["manual"],
    deps = [
        "//src/main/k8s:kingdom",
    ],
)

cue_dump(
    name = "resource_setup",
    srcs = ["resource_setup.cue"],
    cue_tags = {
        "secret_name": TEST_K8S_SETTINGS.secret_name,
    },
    tags = ["manual"],
    deps = [
        "//src/main/k8s:resource_setup",
    ],
)

cue_dump(
    name = "duchies",
    srcs = ["duchies.cue"],
    cue_tags = {
        "secret_name": TEST_K8S_SETTINGS.secret_name,
        "aggregator_cert_name": TEST_K8S_SETTINGS.aggregator_cert_name,
        "worker1_cert_name": TEST_K8S_SETTINGS.worker1_cert_name,
        "worker2_cert_name": TEST_K8S_SETTINGS.worker2_cert_name,
    },
    tags = ["manual"],
    deps = [
        "//src/main/k8s:duchy",
    ],
)

cue_dump(
    name = "edp_simulators",
    srcs = ["edp_simulators.cue"],
    cue_tags = {
        "secret_name": TEST_K8S_SETTINGS.secret_name,
        "mc_name": TEST_K8S_SETTINGS.mc_name,
        "edp1_name": TEST_K8S_SETTINGS.edp1_name,
        "edp2_name": TEST_K8S_SETTINGS.edp2_name,
        "edp3_name": TEST_K8S_SETTINGS.edp3_name,
        "edp4_name": TEST_K8S_SETTINGS.edp4_name,
        "edp5_name": TEST_K8S_SETTINGS.edp5_name,
        "edp6_name": TEST_K8S_SETTINGS.edp6_name,
    },
    tags = ["manual"],
    deps = [
        "//src/main/k8s:edp_simulator",
    ],
)

cue_dump(
    name = "mc_frontend_simulator",
    srcs = ["frontend_simulator.cue"],
    cue_tags = {
        "secret_name": TEST_K8S_SETTINGS.secret_name,
        "mc_name": TEST_K8S_SETTINGS.mc_name,
        "mc_api_key": TEST_K8S_SETTINGS.mc_api_key,
    },
    tags = ["manual"],
    deps = [
        "//src/main/k8s:frontend_simulator",
    ],
)

EMULATOR_IMAGE_NAMES = [
    "fake_storage_server_image",
]

k8s_apply(
    name = "emulators_kind",
    src = ":emulators.yaml",
    # Deploying emulators should bring down everything else since DB and storage
    # get recreated.
    delete_selector = "app.kubernetes.io/part-of=halo-cmms",
    imports = [
        "//src/main/k8s:import_" + image_name + "_kind"
        for image_name in EMULATOR_IMAGE_NAMES
    ],
    tags = ["manual"],
)

RESOURCE_SETUP_IMAGE_NAMES = [
    "resource_setup_runner_image",
]

k8s_apply(
    name = "resource_setup_kind",
    src = ":resource_setup.yaml",
    imports = [
        "//src/main/k8s:import_" + image_name + "_kind"
        for image_name in RESOURCE_SETUP_IMAGE_NAMES
    ],
    tags = ["manual"],
)

KINGDOM_IMAGE_NAMES = [
    "push_spanner_schema_image",
    "kingdom_data_server_image",
    "kingdom_system_api_server_image",
    "kingdom_v2alpha_public_api_server_image",
]

k8s_apply(
    name = "kingdom_kind",
    src = ":kingdom.yaml",
    delete_selector = "app.kubernetes.io/part-of=halo-cmms,app.kubernetes.io/component=kingdom",
    imports = [
        "//src/main/k8s:import_" + image_name + "_kind"
        for image_name in KINGDOM_IMAGE_NAMES
    ],
    tags = ["manual"],
)

DUCHY_IMAGE_NAMES = [
    "push_spanner_schema_image",
    "duchy_async_computation_control_server_image",
    "duchy_spanner_computations_server_image",
    "duchy_herald_daemon_image",
    "forwarded_storage_computation_control_server_image",
    "forwarded_storage_liquid_legions_v2_mill_daemon_image",
    "forwarded_storage_requisition_fulfillment_server_image",
]

k8s_apply(
    name = "duchies_kind",
    src = ":duchies.yaml",
    delete_selector = "app.kubernetes.io/part-of=halo-cmms,app.kubernetes.io/component=duchy",
    imports = [
        "//src/main/k8s:import_" + image_name + "_kind"
        for image_name in DUCHY_IMAGE_NAMES
    ],
    tags = ["manual"],
)

EDP_SIMULATOR_IMAGE_NAMES = [
    "forwarded_storage_edp_simulator_runner_image",
]

k8s_apply(
    name = "edp_simulators_kind",
    src = ":edp_simulators.yaml",
    delete_selector = "app.kubernetes.io/part-of=halo-cmms,app.kubernetes.io/component=simulator",
    imports = [
        "//src/main/k8s:import_" + image_name + "_kind"
        for image_name in EDP_SIMULATOR_IMAGE_NAMES
    ],
    tags = ["manual"],
)

FRONTEND_SIMULATOR_IMAGE_NAMES = [
    "forwarded_storage_frontend_simulator_runner_image",
]

k8s_apply(
    name = "mc_frontend_simulator_kind",
    src = ":mc_frontend_simulator.yaml",
    imports = [
        "//src/main/k8s:import_" + image_name + "_kind"
        for image_name in FRONTEND_SIMULATOR_IMAGE_NAMES
    ],
    tags = ["manual"],
)
