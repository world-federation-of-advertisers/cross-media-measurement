load("//build:variables.bzl", "EXAMPLE_PANEL_EXCHANGE_CLIENT_DAEMON_CONFIG")
load(
    "//src/main/docker/panel_exchange_client:images.bzl",
    "AWS_IMAGES",
    "GCLOUD_IMAGES",
)
load("@wfa_rules_cue//cue:defs.bzl", "cue_library")
load("//src/main/k8s:macros.bzl", "cue_dump")
load("//build/k8s:defs.bzl", "kustomization_dir")

cue_library(
    name = "base_gke",
    srcs = ["base_gke.cue"],
    deps = ["//src/main/k8s/panelmatch:base"],
)

cue_library(
    name = "base_aws",
    srcs = ["base_aws.cue"],
    deps = ["//src/main/k8s/panelmatch:base"],
)

cue_library(
    name = "example_daemon_gke",
    srcs = ["example_daemon_gke.cue"],
    deps = [":base_gke"],
)

cue_library(
    name = "example_daemon_aws",
    srcs = ["example_daemon_aws.cue"],
    deps = [":base_aws"],
)

cue_dump(
    name = "example_edp_daemon_gke",
    srcs = ["example_edp_daemon_gke.cue"],
    cue_tags = {
        "party_name": EXAMPLE_PANEL_EXCHANGE_CLIENT_DAEMON_CONFIG.edp_name,
        "secret_name": EXAMPLE_PANEL_EXCHANGE_CLIENT_DAEMON_CONFIG.edp_secret_name,
    },
    tags = ["manual"],
    deps = [
        ":example_daemon_gke",
        "//src/main/k8s:config",
    ],
)

kustomization_dir(
    name = "edp_daemon_gke",
    srcs = [
        "resource_requirements.yaml",
        ":example_edp_daemon_gke",
    ],
    generate_kustomization = True,
    tags = ["manual"],
)

cue_dump(
    name = "example_mp_daemon_gke",
    srcs = ["example_mp_daemon_gke.cue"],
    cue_tags = {
        "party_name": EXAMPLE_PANEL_EXCHANGE_CLIENT_DAEMON_CONFIG.mp_name,
        "secret_name": EXAMPLE_PANEL_EXCHANGE_CLIENT_DAEMON_CONFIG.mp_secret_name,
    },
    tags = ["manual"],
    deps = [":example_daemon_gke"],
)

kustomization_dir(
    name = "mp_daemon_gke",
    srcs = [
        "resource_requirements.yaml",
        ":example_mp_daemon_gke",
    ],
    generate_kustomization = True,
    tags = ["manual"],
)

cue_dump(
    name = "example_edp_daemon_aws",
    srcs = ["example_edp_daemon_aws.cue"],
    cue_tags = {
        "party_name": EXAMPLE_PANEL_EXCHANGE_CLIENT_DAEMON_CONFIG.edp_name,
        "secret_name": EXAMPLE_PANEL_EXCHANGE_CLIENT_DAEMON_CONFIG.edp_secret_name,
    },
    tags = ["manual"],
    deps = [":example_daemon_aws"],
)

kustomization_dir(
    name = "edp_daemon_aws",
    srcs = [
        "resource_requirements.yaml",
        ":example_edp_daemon_aws",
    ],
    generate_kustomization = True,
    tags = ["manual"],
)

cue_dump(
    name = "example_mp_daemon_aws",
    srcs = ["example_mp_daemon_aws.cue"],
    cue_tags = {
        "party_name": EXAMPLE_PANEL_EXCHANGE_CLIENT_DAEMON_CONFIG.mp_name,
        "secret_name": EXAMPLE_PANEL_EXCHANGE_CLIENT_DAEMON_CONFIG.mp_secret_name,
    },
    tags = ["manual"],
    deps = [":example_daemon_aws"],
)

kustomization_dir(
    name = "mp_daemon_aws",
    srcs = [
        "resource_requirements.yaml",
        ":example_mp_daemon_aws",
    ],
    generate_kustomization = True,
    tags = ["manual"],
)

ALL_IMAGE_ARCHIVES = [
    image_spec.image + ".tar"
    for image_spec in GCLOUD_IMAGES + AWS_IMAGES
]

filegroup(
    name = "all_archives",
    srcs = ALL_IMAGE_ARCHIVES,
    tags = ["manual"],
)

filegroup(
    name = "k8s_deployment_config",
    srcs = [":example_daemon_from_cue_gke.yaml"],
    data = [":all_archives"],
    tags = ["manual"],
    visibility = [":k8s_deployer"],
)

package_group(
    name = "k8s_deployer",
    packages = ["//src/main/kotlin/org/wfanet/panelmatch/tools/..."],
)
