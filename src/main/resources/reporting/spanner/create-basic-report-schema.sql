-- liquibase formatted sql

-- Copyright 2025 The Cross-Media Measurement Authors
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- changeset tristanvuong2021:1 dbms:cloudspanner
-- comment: Create the initial basic report tables

-- Set protobuf FileDescriptorSet as a base64 string. This gets applied to the next DDL batch.
SET PROTO_DESCRIPTORS = '';

START BATCH DDL;

-- Create the initial proto bundle with all types defined in the FileDescriptorSet.
CREATE PROTO BUNDLE (
  `wfa.measurement.internal.reporting.v2.BasicReportDetails`,
  `wfa.measurement.internal.reporting.v2.ReportingImpressionQualificationFilter.CustomImpressionQualificationFilterSpec`,
  `wfa.measurement.internal.reporting.v2.ImpressionQualificationFilterSpec`,
  `wfa.measurement.internal.reporting.v2.EventFilter`,
  `wfa.measurement.internal.reporting.v2.EventTemplateField`,
  `wfa.measurement.internal.reporting.v2.ReportingInterval`,
  `wfa.measurement.internal.reporting.v2.Page`,
  `wfa.measurement.internal.reporting.v2.Page.MetricMetadata.ReportingUnitComponentSummary.ReportingUnitComponentSummaryDetails`,
  `wfa.measurement.internal.reporting.v2.Page.MetricMetadata.ReportingUnitComponentSummary.ReportingUnitComponentSummaryDetails.EventGroupSummary`,
  `wfa.measurement.internal.reporting.v2.Page.MetricMetadata.MetricMetadataDetails`,
  `wfa.measurement.internal.reporting.v2.MetricFrequencySpec`,
  `wfa.measurement.internal.reporting.v2.Page.MetricMetadata.MetricMetadataDetails.WindowingSpec`,
  `wfa.measurement.internal.reporting.v2.Page.MetricMetadata.MetricMetadataDetails.DimensionSpecSummary`,
  `wfa.measurement.internal.reporting.v2.Page.MetricSet.BasicMetricSet`,
  `wfa.measurement.internal.reporting.v2.Page.MetricSet.ComponentMetricSet`,
  `wfa.measurement.internal.reporting.v2.Page.MetricSet.ComponentIntersectionMetricSet.ComponentIntersectionMetricSetDetails`,
  `wfa.measurement.internal.reporting.v2.Page.MetricSet.MetricSetDetails`,
  `wfa.measurement.internal.reporting.v2.Page.MetricSet.MetricSetDetails.ReportingUnitMetricSet`,
);

CREATE TABLE ReportingSets (
  ReportingSetId INT64 NOT NULL,
  CmmsMeasurementConsumerId STRING(MAX) NOT NULL,
  ExternalReportingSetId STRING(MAX) NOT NULL
) PRIMARY KEY ReportingSetId);

CREATE TABLE BasicReports (
  BasicReportId INT64 NOT NULL,
  CmmsMeasurementConsumerId STRING(MAX) NOT NULL,
  ExternalBasicReportId STRING(MAX) NOT NULL,
  RequestId STRING(MAX),
  CreateTime TIMESTAMP NOT NULL OPTIONS (allow_commit_timestamp = true),
  BasicReportDetails `wfa.measurement.internal.reporting.v2.BasicReportDetails`
    NOT NULL,
  CampaignGroupId STRING(MAX) NOT NULL,

  CONSTRAINT FK_BasicReportsReportingSets FOREIGN KEY CampaignGroupId REFERENCES ReportingSets(ReportingSetId)
) PRIMARY KEY (BasicReportId);

CREATE UNIQUE INDEX BasicReportsByExternalBasicReportId
  ON BasicReports(CmmsMeasurementConsumerId, ExternalBasicReportId);

CREATE INDEX BasicReportsByCreateTime
  ON BasicReports(CmmsMeasurementConsumerId, CreateTime, ExternalBasicReportId);

CREATE TABLE ReportingImpressionQualificationFilter (
  BasicReportId NOT NULL,
  ReportingImpressionQualificationFilter INT64 NOT NULL,

  ExternalImpressionQualificationFilterId STRING(MAX),
  CustomImpressionQualificationFilterSpec `wfa.measurement.internal.reporting.v2.ReportingImpressionQualificationFilter.CustomImpressionQualificationFilterSpec`,

  CONSTRAINT FK_ReportingImpressionQualificationFiltersBasicReports FOREIGN KEY BasicReportId REFERENCES BasicReports(BasicReportId) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, ReportingImpressionQualificationFilterId);

CREATE TABLE Pages (
  BasicReportId NOT NULL,
  PageId INT64 NOT NULL,

  Title STRING(MAX),

  CONSTRAINT FK_PagesBasicReports FOREIGN KEY BasicReportId REFERENCES BasicReports(BasicReportId) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, PageId);

CREATE TABLE Results (
  BasicReportId NOT NULL,
  PageId INT64 NOT NULL,
  ResultId INT64 NOT NULL,

  CONSTRAINT FK_ResultsPages FOREIGN KEY (BasicReportId, PageId) REFERENCES Pages(BasicReportId, PageId) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, PageId, ResultId);

CREATE TABLE MetricMetadata (
  BasicReportId NOT NULL,
  PageId INT64 NOT NULL,
  ResultId INT64 NOT NULL,
  MetricMetadataId INT64 NOT NULL,

  ReportingImpressionQualificationFilterId INT64 NOT NULL,
  MetricMetadataDetails `wfa.measurement.internal.reporting.v2.Page.MetricMetadata.MetricMetadataDetails`
    NOT NULL,

  CONSTRAINT FK_MetricMetadataReportingImpressionQualificationFilters FOREIGN KEY (BasicReportId, ReportingImpressionQualificationFilterId)
    REFERENCES ReportingImpressionQualificationFilters(BasicReportId, ReportingImpressionQualificationFilterId),
  CONSTRAINT FK_MetricMetadataResults FOREIGN KEY (BasicReportId, PageId, ResultId) REFERENCES Results(BasicReportId, PageId, ResultId) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, PageId, ResultId, MetricMetadataId);

CREATE TABLE ReportingUnitSummaries (
  BasicReportId NOT NULL,
  PageId INT64 NOT NULL,
  ResultId INT64 NOT NULL,
  MetricMetadataId INT64 NOT NULL,
  ReportingUnitSummaryId INT64 NOT NULL,

  CONSTRAINT FK_ReportingUnitSummariesMetricMetadata FOREIGN KEY (BasicReportId, PageId, ResultId, MetricMetadataId)
    REFERENCES MetricMetadata(BasicReportId, PageId, ResultId, MetricMetadataId) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, PageId, ResultId, MetricMetadataId, ReportingUnitSummaryId);

CREATE TABLE ReportingUnitComponentSummaries (
  BasicReportId NOT NULL,
  PageId INT64 NOT NULL,
  ResultId INT64 NOT NULL,
  MetricMetadataId INT64 NOT NULL,
  ReportingUnitSummaryId INT64 NOT NULL,
  ReportingUnitComponentSummaryId INT64 NOT NULL,

  ReportingSetId INT64,
  CmmsDataProviderId STRING(MAX),
  ReportingUnitComponentSummaryDetails `wfa.measurement.internal.reporting.v2.Page.MetricMetadata.ReportingUnitComponentSummary.ReportingUnitComponentSummaryDetails`
    NOT NULL,

  CONSTRAINT FK_ReportingUnitComponentSummariesReportingSets FOREIGN KEY ReportingSetId REFERENCES ReportingSets(ReportingSetId),
  CONSTRAINT FK_ReportingUnitComponentSummariesReportingUnitSummaries FOREIGN KEY (BasicReportId, PageId, ResultId, MetricMetadataId)
    REFERENCES ReportingUnitSummaries(BasicReportId, PageId, ResultId, MetricMetadataId, ReportingUnitSummaryId) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, PageId, ResultId, MetricMetadataId, ReportingUnitSummaryId, ReportingUnitComponentSummaryId);

CREATE TABLE MetricSets (
  BasicReportId NOT NULL,
  PageId INT64 NOT NULL,
  ResultId INT64 NOT NULL,
  MetricSetId INT64 NOT NULL,

  MetricSetDetails `wfa.measurement.internal.reporting.v2.Page.MetricSet.MetricSetDetails` NOT NULL,

  CONSTRAINT FK_MetricSetsResults FOREIGN KEY (BasicReportId, PageId, ResultId) REFERENCES Results(BasicReportId, PageId, ResultId) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, PageId, ResultId, MetricSetId);

CREATE TABLE ComponentMetricSetMapEntries (
  BasicReportId NOT NULL,
  PageId INT64 NOT NULL,
  ResultId INT64 NOT NULL,
  MetricSetId INT64 NOT NULL,
  ComponentMetricSetMapEntryId NOT NULL,

  ReportingSetId INT64,
  CmmsDataProviderId STRING(MAX),
  ComponentMetricSet `wfa.measurement.internal.reporting.v2.Page.MetricSet.ComponentMetricSet` NOT NULL,

  CONSTRAINT FK_ComponentMetricSetMapEntriesReportingSets FOREIGN KEY ReportingSetId REFERENCES ReportingSets(ReportingSetId),
  CONSTRAINT FK_ComponentMetricSetMapEntriesMetricSets FOREIGN KEY (BasicReportId, PageId, ResultId, MetricSetId)
    REFERENCES MetricSets(BasicReportId, PageId, ResultId, MetricSetId) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, PageId, ResultId, MetricSetId, ComponentMetricSetMapEntryId);

CREATE TABLE ComponentIntersectionMetricSets (
  BasicReportId NOT NULL,
  PageId INT64 NOT NULL,
  ResultId INT64 NOT NULL,
  MetricSetId INT64 NOT NULL,
  ComponentIntersectionMetricSetId NOT NULL,

  ComponentIntersectionMetricSetDetails `wfa.measurement.internal.reporting.v2.Page.MetricSet.ComponentIntersectionMetricSet.ComponentIntersectionMetricSetDetails`
   NOT NULL,

  CONSTRAINT FK_ComponentIntersectionMetricSetsReportingSets FOREIGN KEY ReportingSetId REFERENCES ReportingSets(ReportingSetId),
  CONSTRAINT FK_ComponentIntersectionMetricSetsMetricSets FOREIGN KEY (BasicReportId, PageId, ResultId, MetricSetId)
    REFERENCES MetricSets(BasicReportId, PageId, ResultId, MetricSetId) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, PageId, ResultId, MetricSetId, ComponentIntersectionMetricSetId);

CREATE TABLE ComponentIntersectionMetricSetReportingSets (
  BasicReportId NOT NULL,
  PageId INT64 NOT NULL,
  ResultId INT64 NOT NULL,
  MetricSetId INT64 NOT NULL,
  ComponentIntersectionMetricSetId NOT NULL,
  ReportingSetId NOT NULL,

  CONSTRAINT FK_ComponentIntersectionMetricSetReportingSetsReportingSets FOREIGN KEY ReportingSetId REFERENCES ReportingSets(ReportingSetId),
  CONSTRAINT FK_ComponentIntersectionMetricSetReportingSetsComponentIntersectionMetricSets
    FOREIGN KEY (BasicReportId, PageId, ResultId, MetricSetId, ComponentIntersectionMetricSetId)
    REFERENCES ComponentIntersectionMetricSets(BasicReportId, PageId, ResultId, MetricSetId, ComponentIntersectionMetricSets) ON DELETE CASCADE
) PRIMARY KEY (BasicReportId, PageId, ResultId, MetricSetId, ComponentIntersectionMetricSetId, ReportingSetId);

RUN BATCH;
