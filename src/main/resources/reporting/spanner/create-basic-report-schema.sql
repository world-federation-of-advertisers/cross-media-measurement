-- liquibase formatted sql

-- Copyright 2025 The Cross-Media Measurement Authors
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- changeset tristanvuong2021:1 dbms:cloudspanner
-- comment: Create the initial basic report tables

-- Set protobuf FileDescriptorSet as a base64 string. This gets applied to the next DDL batch.
SET PROTO_DESCRIPTORS = '';

START BATCH DDL;

-- Create the initial proto bundle with all types defined in the FileDescriptorSet.
CREATE PROTO BUNDLE (
  `wfa.measurement.internal.reporting.v2.BasicReportResultDetails`,
  `wfa.measurement.internal.reporting.v2.Page`,
  `wfa.measurement.internal.reporting.v2.Page.Result`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricMetadata`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricMetadata.ReportingUnitComponentSummary`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricMetadata.ReportingUnitComponentSummary.EventGroupSummary`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricMetadata.ReportingUnitSummary`,
  `google.type.Interval`,
  `wfa.measurement.internal.reporting.v2.WindowingSpec`,
  `wfa.measurement.internal.reporting.v2.WindowingSpec.AccumulationOptions`,
  `wfa.measurement.internal.reporting.v2.MetricFrequencySpec`,
  `google.type.DayOfWeek`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricMetadata.DimensionSpecSummary`,
  `wfa.measurement.internal.reporting.v2.EventFilter`,
  `wfa.measurement.internal.reporting.v2.EventTemplateField`,
  `wfa.measurement.internal.reporting.v2.EventTemplateField.FieldValue`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricSet`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricSet.BasicMetricSet`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricSet.ReportingUnitMetricSet`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricSet.ComponentMetricSet`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricSet.DataProviderComponentMetricSetMapEntry`,
  `wfa.measurement.internal.reporting.v2.Page.Result.MetricSet.DataProviderComponentIntersectionMetricSet`,
  `wfa.measurement.internal.reporting.v2.BasicReportDetails`,
  `wfa.measurement.internal.reporting.v2.ImpressionQualificationFilterSpec`,
  `wfa.measurement.internal.reporting.v2.ImpressionQualificationFilterSpec.MediaType`,
  `wfa.measurement.internal.reporting.v2.ReportingInterval`,
  `google.type.DateTime`,
  `google.type.Date`,
);

CREATE TABLE ReportingSets (
  ReportingSetId INT64 NOT NULL,
  CmmsMeasurementConsumerId STRING(MAX) NOT NULL,
  ExternalReportingSetId STRING(MAX) NOT NULL

  DisplayName STRING(MAX)
) PRIMARY KEY ReportingSetId);

CREATE TABLE BasicReports (
  BasicReportId INT64 NOT NULL,
  CmmsMeasurementConsumerId STRING(MAX) NOT NULL,
  ExternalBasicReportId STRING(MAX) NOT NULL,
  RequestId STRING(MAX),
  CreateTime TIMESTAMP NOT NULL OPTIONS (allow_commit_timestamp = true),
  BasicReportDetails `wfa.measurement.internal.reporting.v2.BasicReportDetails`
    NOT NULL,
  CampaignGroupId STRING(MAX) NOT NULL,
  BasicReportResultDetails `wfa.measurement.internal.reporting.v2.BasicReportResultDetails`

  CONSTRAINT FK_BasicReportsReportingSets FOREIGN KEY CampaignGroupId REFERENCES ReportingSets(ReportingSetId)
) PRIMARY KEY (BasicReportId);

CREATE UNIQUE INDEX BasicReportsByExternalBasicReportId
  ON BasicReports(CmmsMeasurementConsumerId, ExternalBasicReportId);

CREATE INDEX BasicReportsByCreateTime
  ON BasicReports(CmmsMeasurementConsumerId, CreateTime, ExternalBasicReportId);

RUN BATCH;
