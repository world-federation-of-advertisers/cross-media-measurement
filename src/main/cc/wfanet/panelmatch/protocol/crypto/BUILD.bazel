load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//visibility:public"])

_INCLUDE_PREFIX = "/src/main/cc"

cc_library(
    name = "deterministic_commutative_encryption_utility",
    srcs = [
        "deterministic_commutative_encryption_utility.cc",
    ],
    hdrs = [
        "deterministic_commutative_encryption_utility.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "//src/main/cc/wfanet/panelmatch/common:macros",
        "//src/main/cc/wfanet/panelmatch/common/crypto:cryptor",
        "//src/main/proto/wfa/panelmatch/protocol/crypto:cryptor_cc_proto",
        "@wfa_common_cpp//src/main/cc/common_cpp/time:started_thread_cpu_timer",
    ],
)

cc_library(
    name = "deterministic_commutative_encryption_utility_wrapper",
    srcs = [
        "deterministic_commutative_encryption_utility_wrapper.cc",
    ],
    hdrs = [
        "deterministic_commutative_encryption_utility_wrapper.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        ":deterministic_commutative_encryption_utility",
        "//src/main/cc/wfanet/panelmatch/common:jni_wrap",
        "//src/main/proto/wfa/panelmatch/protocol/crypto:cryptor_cc_proto",
    ],
)

cc_library(
    name = "event_data_preprocessor",
    hdrs = [
        "event_data_preprocessor.h",
    ],
    strip_include_prefix = _INCLUDE_PREFIX,
    deps = [
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)
