load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "preprocess_events",
    srcs = ["preprocess_events.cc"],
    hdrs = ["preprocess_events.h"],
    strip_include_prefix = "/src/main/cc",
    deps = [
        "//src/main/cc/wfa/panelmatch/common/crypto:aes",
        "//src/main/cc/wfa/panelmatch/common/crypto:aes_with_hkdf",
        "//src/main/cc/wfa/panelmatch/common/crypto:deterministic_commutative_cipher",
        "//src/main/cc/wfa/panelmatch/common/crypto:hkdf",
        "//src/main/cc/wfa/panelmatch/protocol/crypto:event_data_preprocessor",
        "//src/main/proto/wfa/panelmatch/client/eventpreprocessing:preprocess_events_cc_proto",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:span",
        "@tink_base//cc/util:secret_data",
        "@wfa_common_cpp//src/main/cc/common_cpp/fingerprinters",
        "@wfa_common_cpp//src/main/cc/common_cpp/macros",
    ],
)

cc_library(
    name = "preprocess_events_wrapper",
    srcs = ["preprocess_events_wrapper.cc"],
    hdrs = ["preprocess_events_wrapper.h"],
    strip_include_prefix = "/src/main/cc",
    deps = [
        ":preprocess_events",
        "//src/main/proto/wfa/panelmatch/client/eventpreprocessing:preprocess_events_cc_proto",
        "@com_google_absl//absl/status:statusor",
        "@wfa_common_cpp//src/main/cc/common_cpp/jni:jni_wrap",
    ],
)
