load("@pip//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_test")

py_test(
    name = "post_process_origin_report_test",
    srcs = ["post_process_origin_report_test.py"],
    data = [":sample_reports"],
    deps = [
        "//src/main/proto/wfa/measurement/internal/reporting/postprocessing:report_summary_py_pb2",
        "//src/main/python/wfa/measurement/reporting/postprocessing/tools:post_process_origin_report",
        requirement("protobuf"),
    ],
)

py_test(
    name = "post_process_report_summary_v2_test",
    srcs = ["post_process_report_summary_v2_test.py"],
    data = [":sample_reports"],
    deps = [
        "//src/main/proto/wfa/measurement/internal/reporting/postprocessing:report_summary_v2_py_pb2",
        "//src/main/python/wfa/measurement/reporting/postprocessing/tools:post_process_report_summary_v2",
        requirement("protobuf"),
    ],
)

py_test(
    name = "log_processor_test",
    size = "small",
    srcs = ["log_processor_test.py"],
    deps = [
        "//src/main/python/wfa/measurement/reporting/postprocessing/tools:log_processor_lib",
        requirement("absl-py"),
        requirement("google-cloud-storage"),
        requirement("protobuf"),
        "//src/main/proto/wfa/measurement/internal/reporting/postprocessing:report_summary_py_pb2",
        "//src/main/python/wfa/measurement/reporting/postprocessing/tools:post_process_origin_report",
    ],
)

py_test(
    name = "report_conversion_test",
    size = "small",
    srcs = ["report_conversion_test.py"],
    imports = ["../../../../../../../../../"],
    data = [":sample_reports"],
    deps = [
        "//src/main/python/wfa/measurement/reporting/postprocessing/tools:report_conversion",
        requirement("absl-py"),
        requirement("google-api-core"),
        requirement("protobuf"),
        "//src/main/proto/wfa/measurement/internal/reporting/postprocessing:report_summary_v2_py_pb2",
        "//src/main/proto/wfa/measurement/internal/reporting/v2:report_result_py_pb2",
    ],
)

filegroup(
    name = "sample_reports",
    srcs = glob([
        "*.json",
        "*.textproto",
    ]),
)
