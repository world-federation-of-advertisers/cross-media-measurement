load("@rules_cc//cc:defs.bzl", "cc_test")

cc_test(
    name = "cryptor_test",
    srcs = ["cryptor_test.cc"],
    deps = [
        "//src/main/cc/wfa/panelmatch/common/crypto:cryptor",
        "@com_google_absl//absl/memory",
        "@googletest//:gtest_main",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:status",
    ],
)

cc_test(
    name = "aes_test",
    srcs = ["aes_test.cc"],
    deps = [
        "//src/main/cc/wfa/panelmatch/common/crypto:aes",
        "@com_google_absl//absl/strings",
        "@googletest//:gtest_main",
        "@tink_base//cc/util:secret_data",
        "@tink_cc//subtle",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:status",
    ],
)

cc_test(
    name = "hkdf_test",
    srcs = [
        "hkdf_test.cc",
    ],
    deps = [
        "//src/main/cc/wfa/panelmatch/common/crypto:hkdf",
        "@googletest//:gtest_main",
        "@tink_base//cc/util:secret_data",
        "@tink_base//cc/util:status",
        "@tink_base//cc/util:statusor",
        "@tink_cc//util:test_util",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:status",
    ],
)

cc_test(
    name = "aes_with_hkdf_test",
    srcs = [
        "aes_with_hkdf_test.cc",
    ],
    deps = [
        "//src/main/cc/wfa/panelmatch/common/crypto:aes_with_hkdf",
        "@com_google_absl//absl/strings",
        "@googletest//:gtest_main",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:status",
    ],
)

cc_test(
    name = "peppered_fingerprinter_test",
    srcs = [
        "peppered_fingerprinter_test.cc",
    ],
    deps = [
        "//src/main/cc/wfa/panelmatch/common/crypto:peppered_fingerprinter",
        "@googletest//:gtest_main",
        "@tink_base//cc/util:secret_data",
        "@wfa_common_cpp//src/main/cc/common_cpp/fingerprinters",
    ],
)

cc_test(
    name = "ec_commutative_cipher_key_generator",
    srcs = ["ec_commutative_cipher_key_generator_test.cc"],
    deps = [
        "//src/main/cc/wfa/panelmatch/common/crypto:ec_commutative_cipher_key_generator",
        "@com_google_absl//absl/status:statusor",
        "@com_google_private_join_and_compute//crypto:ec_commutative_cipher",
        "@googletest//:gtest_main",
        "@tink_base//cc/util:secret_data",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:status",
    ],
)

cc_test(
    name = "random_bytes_key_generator",
    srcs = ["random_bytes_key_generator_test.cc"],
    deps = [
        "//src/main/cc/wfa/panelmatch/common/crypto:random_bytes_key_generator",
        "@com_google_absl//absl/status:statusor",
        "@googletest//:gtest_main",
        "@tink_base//cc/util:secret_data",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:status",
    ],
)
