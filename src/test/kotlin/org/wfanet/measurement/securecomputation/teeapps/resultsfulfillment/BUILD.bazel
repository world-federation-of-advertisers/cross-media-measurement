load("@wfa_rules_kotlin_jvm//kotlin:defs.bzl", "kt_jvm_test")

package(
    default_testonly = True,
    default_visibility = ["//visibility:public"],
)

kt_jvm_test(
    name = "ResultsFulfillerAppTest",
    srcs = ["ResultsFulfillerAppTest.kt"],
    data = [
        "@wfa_virtual_people_core_serving//src/main/resources/labeler:labeler_integration_test_data",
    ],
    test_class = "org.wfanet.measurement.securecomputation.teeapps.resultsfulfillment.ResultsFulfillerAppTest",
    deps = [
        "//src/main/kotlin/org/wfanet/measurement/api/v2alpha/testing",
        "//src/main/kotlin/org/wfanet/measurement/eventdataprovider/eventfiltration:event_filters",
        "//src/main/kotlin/org/wfanet/measurement/eventdataprovider/privacybudgetmanagement:privacy_budget_manager",
        "//src/main/kotlin/org/wfanet/measurement/eventdataprovider/privacybudgetmanagement/testing",
        "//src/main/kotlin/org/wfanet/measurement/integration/common:configs",
        "//src/main/kotlin/org/wfanet/measurement/securecomputation/controlplane/v1alpha:google_pub_sub_work_items_service",
        "//src/main/kotlin/org/wfanet/measurement/securecomputation/teeapps/resultsfulfillment:results_fulfiller_app",
        "//src/main/kotlin/org/wfanet/measurement/securecomputation/teeapps/vidlabeling:vid_labeler_app",
        "//src/main/proto/wfa/measurement/api/v2alpha:protocol_config_kt_jvm_proto",
        "//src/main/proto/wfa/measurement/api/v2alpha/event_templates/testing:test_event_kt_jvm_proto",
        "//src/main/proto/wfa/measurement/securecomputation/controlplane/v1alpha:work_item_kt_jvm_proto",
        "//src/main/proto/wfa/measurement/securecomputation/controlplane/v1alpha:work_items_service_kt_jvm_grpc_proto",
        "@wfa_common_jvm//imports/java/com/google/common/truth",
        "@wfa_common_jvm//imports/java/com/google/common/truth/extensions/proto",
        "@wfa_common_jvm//imports/java/org/junit",
        "@wfa_common_jvm//imports/kotlin/kotlin/test",
        "@wfa_common_jvm//imports/kotlin/org/mockito/kotlin",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/crypto/testing",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/crypto/tink",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/grpc/testing",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/common/testing",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/pubsub:google_pub_sub_client",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/pubsub:publisher",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/pubsub:subscriber",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/pubsub/testing:google_pub_sub_emulator_client",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/gcloud/pubsub/testing:google_pub_sub_emulator_provider",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/queue:queue_subscriber",
        "@wfa_common_jvm//src/main/kotlin/org/wfanet/measurement/storage/testing",
        "@wfa_consent_signaling_client//src/main/kotlin/org/wfanet/measurement/consent/client/duchy",
        "@wfa_consent_signaling_client//src/main/kotlin/org/wfanet/measurement/consent/client/measurementconsumer",
        "@wfa_virtual_people_common//src/main/proto/wfa/virtual_people/common:event_kt_jvm_proto",
        "@wfa_virtual_people_common//src/main/proto/wfa/virtual_people/common:model_kt_jvm_proto",
        "@wfa_virtual_people_core_serving//src/main/kotlin/org/wfanet/virtualpeople/core/labeler",
    ],
)
